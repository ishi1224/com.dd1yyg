com.ddyyyg.app.App -> com.ddyyyg.app.App:
    com.ddyyyg.app.App mApp -> a
    java.util.concurrent.ExecutorService mExecutorService -> b
    int MAX_THREAD_NUM -> c
    java.util.Stack mActivityStack -> d
    void <init>() -> <init>
    void onCreate() -> onCreate
    java.util.concurrent.ExecutorService getThreadPool() -> a
    void <clinit>() -> <clinit>
com.ddyyyg.app.AppConfig -> com.ddyyyg.app.a:
    java.lang.String DIR_ROOT -> a
    java.lang.String FILE_NAME_EXTENSION_LOG -> b
    int uiWidth -> c
    int uiHeight -> d
    void <clinit>() -> <clinit>
com.ddyyyg.shop.MainActivity -> com.ddyyyg.shop.MainActivity:
    android.widget.ProgressBar mBar -> a
    android.webkit.WebView mWv -> b
    android.os.Handler mHandler -> c
    java.util.List tabUrls -> d
    com.ddyyyg.shop.view.NavigationBar mNavBar -> e
    com.tencent.mm.sdk.openapi.IWXAPI iwxapi -> f
    boolean lock -> g
    long mExitTime -> h
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean isPaySupported() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean isIndex() -> g
    android.widget.ProgressBar getmBar() -> h
    android.webkit.WebView getmWv() -> i
    android.os.Handler getmHandler() -> b
    com.ddyyyg.shop.view.NavigationBar getmNavBar() -> c
    com.tencent.mm.sdk.openapi.IWXAPI getWxapi() -> d
    void regToWx() -> j
    boolean isLock() -> e
    void setLock(boolean) -> a
    java.util.List getTabUrls() -> f
    android.webkit.WebView access$000(com.ddyyyg.shop.MainActivity) -> a
    android.widget.ProgressBar access$100(com.ddyyyg.shop.MainActivity) -> b
com.ddyyyg.shop.MainActivity$1 -> com.ddyyyg.shop.a:
    com.ddyyyg.shop.MainActivity this$0 -> a
    void <init>(com.ddyyyg.shop.MainActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ddyyyg.shop.MainActivity$PayWebChromeClient -> com.ddyyyg.shop.b:
    com.ddyyyg.shop.MainActivity this$0 -> a
    void <init>(com.ddyyyg.shop.MainActivity) -> <init>
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void <init>(com.ddyyyg.shop.MainActivity,com.ddyyyg.shop.MainActivity$1) -> <init>
com.ddyyyg.shop.MainActivity$PayWebChromeClient$1 -> com.ddyyyg.shop.c:
    com.ddyyyg.shop.MainActivity$PayWebChromeClient this$1 -> a
    void <init>(com.ddyyyg.shop.MainActivity$PayWebChromeClient) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ddyyyg.shop.MainActivity$PayWebChromeClient$2 -> com.ddyyyg.shop.d:
    android.webkit.JsResult val$result -> a
    com.ddyyyg.shop.MainActivity$PayWebChromeClient this$1 -> b
    void <init>(com.ddyyyg.shop.MainActivity$PayWebChromeClient,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ddyyyg.shop.MainActivity$PayWebViewClient -> com.ddyyyg.shop.e:
    com.ddyyyg.shop.MainActivity this$0 -> a
    void <init>(com.ddyyyg.shop.MainActivity) -> <init>
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void <init>(com.ddyyyg.shop.MainActivity,com.ddyyyg.shop.MainActivity$1) -> <init>
com.ddyyyg.shop.PayJavaScript -> com.ddyyyg.shop.f:
    android.content.Context mContext -> a
    android.os.Handler mHandler -> b
    com.ddyyyg.shop.MainActivity main -> c
    void <init>(android.content.Context,android.os.Handler) -> <init>
    void payAlipay(java.lang.String) -> payAlipay
    void payWx(java.lang.String) -> payWx
    java.lang.String genStringEntity(java.lang.String) -> a
    void wxPay(java.lang.String) -> b
    void testWxOrder() -> testWxOrder
    java.lang.String getErrorDes(java.lang.String) -> getErrorDes
    java.util.Map mapError() -> mapError
    com.ddyyyg.shop.MainActivity access$000(com.ddyyyg.shop.PayJavaScript) -> a
com.ddyyyg.shop.PayJavaScript$1 -> com.ddyyyg.shop.g:
    com.ddyyyg.shop.PayJavaScript this$0 -> a
    void <init>(com.ddyyyg.shop.PayJavaScript) -> <init>
    void run() -> run
com.ddyyyg.shop.model.BaseModel -> com.ddyyyg.shop.model.BaseModel:
    void <init>() -> <init>
com.ddyyyg.shop.model.PayModel -> com.ddyyyg.shop.model.PayModel:
    java.lang.String appid -> appid
    java.lang.String mch_id -> mch_id
    java.lang.String device_info -> device_info
    java.lang.String nonce_str -> nonce_str
    java.lang.String sign -> sign
    java.lang.String body -> body
    java.lang.String detail -> detail
    java.lang.String attach -> attach
    java.lang.String out_trade_no -> out_trade_no
    java.lang.String fee_type -> fee_type
    java.lang.String total_fee -> total_fee
    java.lang.String spbill_create_ip -> spbill_create_ip
    java.lang.String time_start -> time_start
    java.lang.String time_expire -> time_expire
    java.lang.String goods_tag -> goods_tag
    java.lang.String notify_url -> notify_url
    java.lang.String trade_type -> trade_type
    java.lang.String limit_pay -> limit_pay
    void <init>() -> <init>
    void setAppid(java.lang.String) -> setAppid
    void setMch_id(java.lang.String) -> setMch_id
    void setDevice_info(java.lang.String) -> setDevice_info
    void setNonce_str(java.lang.String) -> setNonce_str
    void setSign(java.lang.String) -> setSign
    void setBody(java.lang.String) -> setBody
    void setDetail(java.lang.String) -> setDetail
    void setAttach(java.lang.String) -> setAttach
    void setOut_trade_no(java.lang.String) -> setOut_trade_no
    void setFee_type(java.lang.String) -> setFee_type
    void setTotal_fee(java.lang.String) -> setTotal_fee
    void setSpbill_create_ip(java.lang.String) -> setSpbill_create_ip
    void setTime_start(java.lang.String) -> setTime_start
    void setTime_expire(java.lang.String) -> setTime_expire
    void setGoods_tag(java.lang.String) -> setGoods_tag
    void setNotify_url(java.lang.String) -> setNotify_url
    void setTrade_type(java.lang.String) -> setTrade_type
    void setLimit_pay(java.lang.String) -> setLimit_pay
    java.lang.String getAppid() -> getAppid
    java.lang.String getMch_id() -> getMch_id
    java.lang.String getDevice_info() -> getDevice_info
    java.lang.String getNonce_str() -> getNonce_str
    java.lang.String getSign() -> getSign
    java.lang.String getBody() -> getBody
    java.lang.String getDetail() -> getDetail
    java.lang.String getAttach() -> getAttach
    java.lang.String getOut_trade_no() -> getOut_trade_no
    java.lang.String getFee_type() -> getFee_type
    java.lang.String getTotal_fee() -> getTotal_fee
    java.lang.String getSpbill_create_ip() -> getSpbill_create_ip
    java.lang.String getTime_start() -> getTime_start
    java.lang.String getTime_expire() -> getTime_expire
    java.lang.String getGoods_tag() -> getGoods_tag
    java.lang.String getNotify_url() -> getNotify_url
    java.lang.String getTrade_type() -> getTrade_type
    java.lang.String getLimit_pay() -> getLimit_pay
    java.lang.String toString() -> toString
com.ddyyyg.shop.model.PayReqModel -> com.ddyyyg.shop.model.PayReqModel:
    java.lang.String partnerId -> partnerId
    java.lang.String prepayId -> prepayId
    java.lang.String nonceStr -> nonceStr
    java.lang.String timeStamp -> timeStamp
    java.lang.String packageValue -> packageValue
    void <init>() -> <init>
    void setPartnerId(java.lang.String) -> setPartnerId
    void setPrepayId(java.lang.String) -> setPrepayId
    void setNonceStr(java.lang.String) -> setNonceStr
    void setTimeStamp(java.lang.String) -> setTimeStamp
    void setPackageValue(java.lang.String) -> setPackageValue
    java.lang.String getPartnerId() -> getPartnerId
    java.lang.String getPrepayId() -> getPrepayId
    java.lang.String getNonceStr() -> getNonceStr
    java.lang.String getTimeStamp() -> getTimeStamp
    java.lang.String getPackageValue() -> getPackageValue
    java.lang.String toString() -> toString
com.ddyyyg.shop.model.PayReturnModel -> com.ddyyyg.shop.model.PayReturnModel:
    java.lang.String return_code -> return_code
    java.lang.String return_msg -> return_msg
    java.lang.String appid -> appid
    java.lang.String mch_id -> mch_id
    java.lang.String device_info -> device_info
    java.lang.String nonce_str -> nonce_str
    java.lang.String sign -> sign
    java.lang.String result_code -> result_code
    java.lang.String trade_type -> trade_type
    java.lang.String prepay_id -> prepay_id
    java.lang.String err_code -> err_code
    java.lang.String err_code_des -> err_code_des
    void <init>() -> <init>
    void setAppid(java.lang.String) -> setAppid
    void setMch_id(java.lang.String) -> setMch_id
    void setDevice_info(java.lang.String) -> setDevice_info
    void setNonce_str(java.lang.String) -> setNonce_str
    void setSign(java.lang.String) -> setSign
    void setResult_code(java.lang.String) -> setResult_code
    void setErr_code(java.lang.String) -> setErr_code
    void setErr_code_des(java.lang.String) -> setErr_code_des
    void setReturn_code(java.lang.String) -> setReturn_code
    void setReturn_msg(java.lang.String) -> setReturn_msg
    void setTrade_type(java.lang.String) -> setTrade_type
    void setPrepay_id(java.lang.String) -> setPrepay_id
    java.lang.String getAppid() -> getAppid
    java.lang.String getMch_id() -> getMch_id
    java.lang.String getDevice_info() -> getDevice_info
    java.lang.String getNonce_str() -> getNonce_str
    java.lang.String getSign() -> getSign
    java.lang.String getResult_code() -> getResult_code
    java.lang.String getErr_code() -> getErr_code
    java.lang.String getErr_code_des() -> getErr_code_des
    java.lang.String getReturn_code() -> getReturn_code
    java.lang.String getReturn_msg() -> getReturn_msg
    java.lang.String getTrade_type() -> getTrade_type
    java.lang.String getPrepay_id() -> getPrepay_id
    java.lang.String toString() -> toString
com.ddyyyg.shop.receiver.AppRegister -> com.ddyyyg.shop.receiver.AppRegister:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.ddyyyg.shop.utils.AppUtil -> com.ddyyyg.shop.a.a:
    java.lang.String getHostAddress() -> a
com.ddyyyg.shop.utils.DensityUtil -> com.ddyyyg.shop.a.b:
    int dip2px(android.content.Context,float) -> a
com.ddyyyg.shop.utils.FileHelper -> com.ddyyyg.shop.a.c:
    java.lang.String mEncode -> a
    boolean writeStringToFile(java.io.File,java.lang.String) -> a
    boolean writeStringToFile(java.io.File,java.lang.String,boolean) -> a
    boolean createNewFileAndParentDir(java.io.File) -> a
    boolean createParentDir(java.io.File) -> b
    void <clinit>() -> <clinit>
com.ddyyyg.shop.utils.HttpUtil -> com.ddyyyg.shop.a.d:
    java.lang.String TAG -> a
    void <init>() -> <init>
    byte[] httpGet(java.lang.String) -> a
    byte[] httpPost(java.lang.String,java.lang.String) -> a
    org.apache.http.client.HttpClient getNewHttpClient() -> a
    void <clinit>() -> <clinit>
com.ddyyyg.shop.utils.HttpUtil$SSLSocketFactoryEx -> com.ddyyyg.shop.a.e:
    javax.net.ssl.SSLContext sslContext -> a
    void <init>(java.security.KeyStore) -> <init>
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.ddyyyg.shop.utils.HttpUtil$SSLSocketFactoryEx$1 -> com.ddyyyg.shop.a.f:
    com.ddyyyg.shop.utils.HttpUtil$SSLSocketFactoryEx this$0 -> a
    void <init>(com.ddyyyg.shop.utils.HttpUtil$SSLSocketFactoryEx) -> <init>
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.ddyyyg.shop.utils.LogUtil -> com.ddyyyg.shop.a.g:
    boolean mOpen -> b
    java.lang.String TAG -> a
    void <init>() -> <init>
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void i(java.lang.String,java.lang.String) -> c
    void writeToFile(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> a
    void <clinit>() -> <clinit>
com.ddyyyg.shop.utils.LogUtil$1 -> com.ddyyyg.shop.a.h:
    java.lang.String val$levelD -> a
    java.lang.String val$tag -> b
    java.lang.String val$msg -> c
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    void run() -> run
com.ddyyyg.shop.utils.MD5 -> com.ddyyyg.shop.a.i:
    java.lang.String d(java.lang.Object) -> a
com.ddyyyg.shop.utils.OrderUtil -> com.ddyyyg.shop.a.j:
    java.lang.String getAppid(android.content.Context) -> a
    java.lang.String getMacid(android.content.Context) -> b
    java.lang.String getNonceStr(android.content.Context) -> c
    java.lang.String getOutTradeNo() -> a
    java.lang.String getSpbillCreateIp() -> b
    java.lang.String getNotifyUrl() -> c
    java.lang.String getTradeType(android.content.Context) -> d
    java.lang.String getPackageValue(android.content.Context) -> e
    java.lang.String getSign(android.content.Context,com.ddyyyg.shop.model.PayModel) -> a
    java.lang.String getSign(android.content.Context,com.ddyyyg.shop.model.PayReqModel) -> a
    java.util.Map M(com.ddyyyg.shop.model.PayModel) -> a
    java.util.Map M(com.ddyyyg.shop.model.PayReqModel) -> a
    java.lang.String Splice(android.content.Context,java.util.List,java.util.Map) -> a
    java.lang.String getTimeStamp() -> d
com.ddyyyg.shop.utils.SPUtils -> com.ddyyyg.shop.a.k:
    void <init>() -> <init>
    void putString(android.content.Context,java.lang.String,java.lang.String) -> putString
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> getString
com.ddyyyg.shop.utils.TimeUtil -> com.ddyyyg.shop.a.l:
    java.lang.String getOutTradeNo() -> a
    java.lang.String getCurrentTime(java.lang.String) -> a
    java.lang.String Date2TimeStamp() -> b
com.ddyyyg.shop.utils.ToastUtil -> com.ddyyyg.shop.a.m:
    void makeText(android.content.Context,java.lang.String) -> a
com.ddyyyg.shop.view.NavigationBar -> com.ddyyyg.shop.view.NavigationBar:
    android.content.Context context -> a
    android.widget.FrameLayout flLeft -> b
    android.widget.TextView tvLeft -> c
    android.widget.ImageView ivLeft -> d
    android.widget.FrameLayout flTitle -> e
    android.widget.TextView tvTitle -> f
    android.widget.ImageView ivTitle -> g
    android.widget.FrameLayout flRight -> h
    android.widget.TextView tvRight -> i
    android.widget.ImageView ivRight -> j
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setupViews(android.content.Context) -> setupViews
    void setTvLeft(java.lang.String) -> setTvLeft
    void setIvLeft(int) -> setIvLeft
    void setTvTitle(java.lang.String) -> setTvTitle
    void setIvTitle(int) -> setIvTitle
    void setTvRight(java.lang.String) -> setTvRight
    void setIvRight(int) -> setIvRight
    android.widget.FrameLayout getFlLeft() -> getFlLeft
    android.widget.TextView getTvLeft() -> getTvLeft
    android.widget.ImageView getIvLeft() -> getIvLeft
    android.widget.FrameLayout getFlTitle() -> getFlTitle
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.ImageView getIvTitle() -> getIvTitle
    android.widget.FrameLayout getFlRight() -> getFlRight
    android.widget.TextView getTvRight() -> getTvRight
    android.widget.ImageView getIvRight() -> getIvRight
    void setLeftInVisible() -> a
    void setLeftVisible() -> b
com.ddyyyg.shop.wxapi.WXPayEntryActivity -> com.ddyyyg.shop.wxapi.WXPayEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> a
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> a
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> a
com.tencent.mm.a.a -> com.a.a.a.a:
    java.lang.String a(byte[]) -> a
com.tencent.mm.sdk.a -> com.a.a.b.a:
    android.content.ContentResolver a -> a
    java.lang.String[] b -> b
    java.util.HashMap c -> c
    com.tencent.mm.sdk.a$a d -> d
    void <init>(android.content.Context) -> <init>
    java.lang.Object getValue(java.lang.String) -> a
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.a$a -> com.a.a.b.b:
    java.util.Map e -> a
    java.util.Set f -> b
    boolean g -> c
    android.content.ContentResolver a -> d
    void <init>(android.content.ContentResolver) -> <init>
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.a.a -> com.a.a.b.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a$a) -> a
com.tencent.mm.sdk.a.a$a -> com.a.a.b.a.b:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    int flags -> d
    android.os.Bundle k -> e
    void <init>() -> <init>
com.tencent.mm.sdk.a.a.a -> com.a.a.b.a.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a.a$a) -> a
com.tencent.mm.sdk.a.a.a$a -> com.a.a.b.a.a.b:
    java.lang.String l -> a
    java.lang.String m -> b
    java.lang.String j -> c
    android.os.Bundle k -> d
    void <init>() -> <init>
com.tencent.mm.sdk.a.a.b -> com.a.a.b.a.a.c:
    byte[] a(java.lang.String,int,java.lang.String) -> a
com.tencent.mm.sdk.b.a -> com.a.a.b.b.a:
    int level -> a
    com.tencent.mm.sdk.b.a$a n -> b
    com.tencent.mm.sdk.b.a$a o -> c
    java.lang.String p -> d
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    int a() -> a
    void <clinit>() -> <clinit>
com.tencent.mm.sdk.b.a$a -> com.a.a.b.b.b:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void f(java.lang.String,java.lang.String) -> c
    int b() -> a
com.tencent.mm.sdk.b.b -> com.a.a.b.b.c:
    void <init>() -> <init>
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void f(java.lang.String,java.lang.String) -> c
    int b() -> a
com.tencent.mm.sdk.b.c -> com.a.a.b.b.d:
    long[] q -> a
    java.util.TimeZone GMT -> b
    char[] r -> c
    java.lang.String[] s -> d
    boolean a(java.lang.String) -> a
    void <clinit>() -> <clinit>
com.tencent.mm.sdk.c.a -> com.a.a.b.c.a:
com.tencent.mm.sdk.c.a$a -> com.a.a.b.c.b:
    java.lang.Object a(int,java.lang.String) -> a
com.tencent.mm.sdk.c.a$b -> com.a.a.b.c.c:
    android.net.Uri CONTENT_URI -> a
    void <clinit>() -> <clinit>
com.tencent.mm.sdk.modelbase.BaseReq -> com.a.a.b.d.a:
    java.lang.String transaction -> a
    java.lang.String openId -> b
    void <init>() -> <init>
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelbase.BaseResp -> com.a.a.b.d.b:
    int errCode -> a
    java.lang.String errStr -> b
    java.lang.String transaction -> c
    java.lang.String openId -> d
    void <init>() -> <init>
    int getType() -> a
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.modelmsg.GetMessageFromWX -> com.a.a.b.e.a:
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req -> com.a.a.b.e.b:
    void <init>() -> <init>
    void <init>(android.os.Bundle) -> <init>
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.LaunchFromWX -> com.a.a.b.e.c:
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req -> com.a.a.b.e.d:
    void <init>() -> <init>
    void <init>(android.os.Bundle) -> <init>
    int getType() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.SendAuth -> com.a.a.b.e.e:
com.tencent.mm.sdk.modelmsg.SendAuth$Resp -> com.a.a.b.e.f:
    java.lang.String code -> e
    java.lang.String state -> f
    java.lang.String url -> g
    void <init>() -> <init>
    void <init>(android.os.Bundle) -> <init>
    int getType() -> a
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.modelmsg.SendMessageToWX -> com.a.a.b.e.g:
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp -> com.a.a.b.e.h:
    void <init>() -> <init>
    void <init>(android.os.Bundle) -> <init>
    int getType() -> a
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX -> com.a.a.b.e.i:
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req -> com.a.a.b.e.j:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> c
    void <init>() -> <init>
    void <init>(android.os.Bundle) -> <init>
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.WXMediaMessage -> com.a.a.b.e.k:
    int sdkVer -> a
    java.lang.String title -> b
    java.lang.String description -> c
    byte[] thumbData -> d
    com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject mediaObject -> e
    java.lang.String mediaTagName -> f
    void <init>() -> <init>
    void <init>(com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject) -> <init>
    int getType() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder -> com.a.a.b.e.l:
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXMediaMessage) -> a
    com.tencent.mm.sdk.modelmsg.WXMediaMessage fromBundle(android.os.Bundle) -> a
    java.lang.String pathNewToOld(java.lang.String) -> a
    java.lang.String pathOldToNew(java.lang.String) -> b
com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject -> com.a.a.b.e.m:
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelpay.PayReq -> com.a.a.b.f.a:
    java.lang.String appId -> c
    java.lang.String partnerId -> d
    java.lang.String prepayId -> e
    java.lang.String nonceStr -> f
    java.lang.String timeStamp -> g
    java.lang.String packageValue -> h
    java.lang.String sign -> i
    java.lang.String extData -> j
    com.tencent.mm.sdk.modelpay.PayReq$Options options -> k
    void <init>() -> <init>
    boolean checkArgs() -> b
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    int getType() -> a
com.tencent.mm.sdk.modelpay.PayReq$Options -> com.a.a.b.f.b:
    java.lang.String callbackClassName -> a
    int callbackFlags -> b
    void <init>() -> <init>
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
com.tencent.mm.sdk.modelpay.PayResp -> com.a.a.b.f.c:
    java.lang.String prepayId -> e
    java.lang.String returnKey -> f
    java.lang.String extData -> g
    void <init>() -> <init>
    void <init>(android.os.Bundle) -> <init>
    void fromBundle(android.os.Bundle) -> a
    int getType() -> a
com.tencent.mm.sdk.openapi.IWXAPI -> com.a.a.b.g.a:
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    int getWXAppSupportAPI() -> a
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> a
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.a.a.b.g.b:
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> a
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> a
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.a.a.b.g.c:
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String) -> a
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> a
com.tencent.mm.sdk.openapi.WXApiImplComm -> com.a.a.b.g.d:
    boolean isIntentFromWx(android.content.Intent,java.lang.String) -> a
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String,boolean) -> a
    boolean validateAppSignature(android.content.Context,android.content.pm.Signature[],boolean) -> a
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.a.a.b.g.e:
    android.content.Context context -> a
    java.lang.String appId -> b
    boolean checkSignature -> c
    boolean detached -> d
    java.lang.String wxappPayEntryClassname -> e
    void <init>(android.content.Context,java.lang.String,boolean) -> <init>
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    boolean isWXAppInstalled() -> b
    int getWXAppSupportAPI() -> a
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> a
    boolean sendPayReq(android.content.Context,android.os.Bundle) -> a
    boolean checkSumConsistent(byte[],byte[]) -> a
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.InitializationException -> com.thoughtworks.xstream.InitializationException:
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
com.thoughtworks.xstream.MarshallingStrategy -> com.thoughtworks.xstream.MarshallingStrategy:
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
com.thoughtworks.xstream.XStream -> com.thoughtworks.xstream.XStream:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver -> hierarchicalStreamDriver
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    com.thoughtworks.xstream.MarshallingStrategy marshallingStrategy -> marshallingStrategy
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.mapper.PackageAliasingMapper packageAliasingMapper -> packageAliasingMapper
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeAliasingMapper attributeAliasingMapper -> attributeAliasingMapper
    com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper systemAttributeAliasingMapper -> systemAttributeAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImmutableTypesMapper immutableTypesMapper -> immutableTypesMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    com.thoughtworks.xstream.mapper.SecurityMapper securityMapper -> securityMapper
    com.thoughtworks.xstream.mapper.AnnotationConfiguration annotationConfiguration -> annotationConfiguration
    int NO_REFERENCES -> NO_REFERENCES
    int ID_REFERENCES -> ID_REFERENCES
    int XPATH_RELATIVE_REFERENCES -> XPATH_RELATIVE_REFERENCES
    int XPATH_ABSOLUTE_REFERENCES -> XPATH_ABSOLUTE_REFERENCES
    int SINGLE_NODE_XPATH_RELATIVE_REFERENCES -> SINGLE_NODE_XPATH_RELATIVE_REFERENCES
    int SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES -> SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES
    int PRIORITY_VERY_HIGH -> PRIORITY_VERY_HIGH
    int PRIORITY_NORMAL -> PRIORITY_NORMAL
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_VERY_LOW -> PRIORITY_VERY_LOW
    java.lang.String ANNOTATION_MAPPER_TYPE -> ANNOTATION_MAPPER_TYPE
    java.util.regex.Pattern IGNORE_ALL -> IGNORE_ALL
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.DefaultConverterLookup) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry) -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry) -> <init>
    com.thoughtworks.xstream.mapper.Mapper buildMapper() -> buildMapper
    com.thoughtworks.xstream.mapper.Mapper buildMapperDynamically(java.lang.String,java.lang.Class[],java.lang.Object[]) -> buildMapperDynamically
    com.thoughtworks.xstream.mapper.MapperWrapper wrapMapper(com.thoughtworks.xstream.mapper.MapperWrapper) -> wrapMapper
    boolean useXStream11XmlFriendlyMapper() -> useXStream11XmlFriendlyMapper
    void setupMappers() -> setupMappers
    void setupSecurity() -> setupSecurity
    void setupAliases() -> setupAliases
    void aliasDynamically(java.lang.String,java.lang.String) -> aliasDynamically
    void setupDefaultImplementations() -> setupDefaultImplementations
    void setupConverters() -> setupConverters
    void registerConverterDynamically(java.lang.String,int,java.lang.Class[],java.lang.Object[]) -> registerConverterDynamically
    void setupImmutableTypes() -> setupImmutableTypes
    void addImmutableTypeDynamically(java.lang.String) -> addImmutableTypeDynamically
    void setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy) -> setMarshallingStrategy
    java.lang.String toXML(java.lang.Object) -> toXML
    void toXML(java.lang.Object,java.io.Writer) -> toXML
    void toXML(java.lang.Object,java.io.OutputStream) -> toXML
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshal
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(java.io.InputStream) -> fromXML
    java.lang.Object fromXML(java.net.URL) -> fromXML
    java.lang.Object fromXML(java.io.File) -> fromXML
    java.lang.Object fromXML(java.lang.String,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.Reader,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.net.URL,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.File,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.InputStream,java.lang.Object) -> fromXML
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> unmarshal
    void alias(java.lang.String,java.lang.Class) -> alias
    void aliasType(java.lang.String,java.lang.Class) -> aliasType
    void alias(java.lang.String,java.lang.Class,java.lang.Class) -> alias
    void aliasPackage(java.lang.String,java.lang.String) -> aliasPackage
    void aliasField(java.lang.String,java.lang.Class,java.lang.String) -> aliasField
    void aliasAttribute(java.lang.String,java.lang.String) -> aliasAttribute
    void aliasSystemAttribute(java.lang.String,java.lang.String) -> aliasSystemAttribute
    void aliasAttribute(java.lang.Class,java.lang.String,java.lang.String) -> aliasAttribute
    void useAttributeFor(java.lang.String,java.lang.Class) -> useAttributeFor
    void useAttributeFor(java.lang.Class,java.lang.String) -> useAttributeFor
    void useAttributeFor(java.lang.Class) -> useAttributeFor
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    void addImmutableType(java.lang.Class) -> addImmutableType
    void registerConverter(com.thoughtworks.xstream.converters.Converter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int) -> registerConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.SingleValueConverter) -> registerLocalConverter
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider getReflectionProvider() -> getReflectionProvider
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    void setMode(int) -> setMode
    void addImplicitCollection(java.lang.Class,java.lang.String) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.Class) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> addImplicitCollection
    void addImplicitArray(java.lang.Class,java.lang.String) -> addImplicitArray
    void addImplicitArray(java.lang.Class,java.lang.String,java.lang.Class) -> addImplicitArray
    void addImplicitArray(java.lang.Class,java.lang.String,java.lang.String) -> addImplicitArray
    void addImplicitMap(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String) -> addImplicitMap
    void addImplicitMap(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String) -> addImplicitMap
    com.thoughtworks.xstream.converters.DataHolder newDataHolder() -> newDataHolder
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String) -> createObjectOutputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.Reader) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.InputStream) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> createObjectInputStream
    void setClassLoader(java.lang.ClassLoader) -> setClassLoader
    java.lang.ClassLoader getClassLoader() -> getClassLoader
    com.thoughtworks.xstream.core.ClassLoaderReference getClassLoaderReference() -> getClassLoaderReference
    void omitField(java.lang.Class,java.lang.String) -> omitField
    void ignoreUnknownElements() -> ignoreUnknownElements
    void ignoreUnknownElements(java.lang.String) -> ignoreUnknownElements
    void ignoreUnknownElements(java.util.regex.Pattern) -> ignoreUnknownElements
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void addPermission(com.thoughtworks.xstream.security.TypePermission) -> addPermission
    void allowTypes(java.lang.String[]) -> allowTypes
    void allowTypes(java.lang.Class[]) -> allowTypes
    void allowTypeHierarchy(java.lang.Class) -> allowTypeHierarchy
    void allowTypesByRegExp(java.lang.String[]) -> allowTypesByRegExp
    void allowTypesByRegExp(java.util.regex.Pattern[]) -> allowTypesByRegExp
    void allowTypesByWildcard(java.lang.String[]) -> allowTypesByWildcard
    void denyPermission(com.thoughtworks.xstream.security.TypePermission) -> denyPermission
    void denyTypes(java.lang.String[]) -> denyTypes
    void denyTypes(java.lang.Class[]) -> denyTypes
    void denyTypeHierarchy(java.lang.Class) -> denyTypeHierarchy
    void denyTypesByRegExp(java.lang.String[]) -> denyTypesByRegExp
    void denyTypesByRegExp(java.util.regex.Pattern[]) -> denyTypesByRegExp
    void denyTypesByWildcard(java.lang.String[]) -> denyTypesByWildcard
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.XStream$1 -> com.thoughtworks.xstream.XStream$1:
    com.thoughtworks.xstream.core.DefaultConverterLookup val$defaultConverterLookup -> val$defaultConverterLookup
    void <init>(com.thoughtworks.xstream.core.DefaultConverterLookup) -> <init>
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
com.thoughtworks.xstream.XStream$2 -> com.thoughtworks.xstream.XStream$2:
    com.thoughtworks.xstream.core.DefaultConverterLookup val$defaultConverterLookup -> val$defaultConverterLookup
    void <init>(com.thoughtworks.xstream.core.DefaultConverterLookup) -> <init>
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
com.thoughtworks.xstream.XStream$3 -> com.thoughtworks.xstream.XStream$3:
    com.thoughtworks.xstream.io.StatefulWriter val$statefulWriter -> val$statefulWriter
    com.thoughtworks.xstream.XStream this$0 -> this$0
    void <init>(com.thoughtworks.xstream.XStream,com.thoughtworks.xstream.io.StatefulWriter) -> <init>
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.XStream$4 -> com.thoughtworks.xstream.XStream$4:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.XStream this$0 -> this$0
    void <init>(com.thoughtworks.xstream.XStream,com.thoughtworks.xstream.io.HierarchicalStreamReader) -> <init>
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.XStream$InitializationException -> com.thoughtworks.xstream.XStream$InitializationException:
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
com.thoughtworks.xstream.XStreamException -> com.thoughtworks.xstream.XStreamException:
    java.lang.Throwable cause -> cause
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.XStreamer -> com.thoughtworks.xstream.XStreamer:
    com.thoughtworks.xstream.security.TypePermission[] PERMISSIONS -> PERMISSIONS
    void <init>() -> <init>
    java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object) -> toXML
    void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer) -> toXML
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(java.lang.String,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(java.io.Reader,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    com.thoughtworks.xstream.security.TypePermission[] getDefaultPermissions() -> getDefaultPermissions
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.annotations.AnnotationProvider -> com.thoughtworks.xstream.annotations.AnnotationProvider:
    void <init>() -> <init>
    java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class) -> getAnnotation
com.thoughtworks.xstream.annotations.AnnotationReflectionConverter -> com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:
    com.thoughtworks.xstream.annotations.AnnotationProvider annotationProvider -> annotationProvider
    java.util.Map cachedConverters -> cachedConverters
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.annotations.AnnotationProvider) -> <init>
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    void ensureCache(java.lang.Class) -> ensureCache
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    com.thoughtworks.xstream.converters.Converter newInstance(java.lang.Class) -> newInstance
com.thoughtworks.xstream.annotations.Annotations -> com.thoughtworks.xstream.annotations.Annotations:
    void <init>() -> <init>
    void configureAliases(com.thoughtworks.xstream.XStream,java.lang.Class[]) -> configureAliases
com.thoughtworks.xstream.annotations.XStreamAlias -> com.thoughtworks.xstream.annotations.XStreamAlias:
    java.lang.String value() -> value
    java.lang.Class impl() -> impl
com.thoughtworks.xstream.annotations.XStreamAliasType -> com.thoughtworks.xstream.annotations.XStreamAliasType:
    java.lang.String value() -> value
com.thoughtworks.xstream.annotations.XStreamAsAttribute -> com.thoughtworks.xstream.annotations.XStreamAsAttribute:
com.thoughtworks.xstream.annotations.XStreamContainedType -> com.thoughtworks.xstream.annotations.XStreamContainedType:
com.thoughtworks.xstream.annotations.XStreamConverter -> com.thoughtworks.xstream.annotations.XStreamConverter:
    java.lang.Class value() -> value
    int priority() -> priority
    boolean useImplicitType() -> useImplicitType
    java.lang.Class[] types() -> types
    java.lang.String[] strings() -> strings
    byte[] bytes() -> bytes
    char[] chars() -> chars
    short[] shorts() -> shorts
    int[] ints() -> ints
    long[] longs() -> longs
    float[] floats() -> floats
    double[] doubles() -> doubles
    boolean[] booleans() -> booleans
com.thoughtworks.xstream.annotations.XStreamConverters -> com.thoughtworks.xstream.annotations.XStreamConverters:
    com.thoughtworks.xstream.annotations.XStreamConverter[] value() -> value
com.thoughtworks.xstream.annotations.XStreamImplicit -> com.thoughtworks.xstream.annotations.XStreamImplicit:
    java.lang.String itemFieldName() -> itemFieldName
    java.lang.String keyFieldName() -> keyFieldName
com.thoughtworks.xstream.annotations.XStreamImplicitCollection -> com.thoughtworks.xstream.annotations.XStreamImplicitCollection:
    java.lang.String value() -> value
    java.lang.String item() -> item
com.thoughtworks.xstream.annotations.XStreamInclude -> com.thoughtworks.xstream.annotations.XStreamInclude:
    java.lang.Class[] value() -> value
com.thoughtworks.xstream.annotations.XStreamOmitField -> com.thoughtworks.xstream.annotations.XStreamOmitField:
com.thoughtworks.xstream.converters.ConversionException -> com.thoughtworks.xstream.converters.ConversionException:
    java.lang.String SEPARATOR -> SEPARATOR
    java.util.Map stuff -> stuff
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    java.lang.String get(java.lang.String) -> get
    void add(java.lang.String,java.lang.String) -> add
    void set(java.lang.String,java.lang.String) -> set
    java.util.Iterator keys() -> keys
    java.lang.String getMessage() -> getMessage
    java.lang.String getShortMessage() -> getShortMessage
com.thoughtworks.xstream.converters.Converter -> com.thoughtworks.xstream.converters.Converter:
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.ConverterLookup -> com.thoughtworks.xstream.converters.ConverterLookup:
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
com.thoughtworks.xstream.converters.ConverterMatcher -> com.thoughtworks.xstream.converters.ConverterMatcher:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.ConverterRegistry -> com.thoughtworks.xstream.converters.ConverterRegistry:
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
com.thoughtworks.xstream.converters.DataHolder -> com.thoughtworks.xstream.converters.DataHolder:
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.ErrorReporter -> com.thoughtworks.xstream.converters.ErrorReporter:
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.ErrorWriter -> com.thoughtworks.xstream.converters.ErrorWriter:
    void add(java.lang.String,java.lang.String) -> add
    void set(java.lang.String,java.lang.String) -> set
    java.lang.String get(java.lang.String) -> get
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.MarshallingContext -> com.thoughtworks.xstream.converters.MarshallingContext:
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
com.thoughtworks.xstream.converters.SingleValueConverter -> com.thoughtworks.xstream.converters.SingleValueConverter:
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.SingleValueConverterWrapper -> com.thoughtworks.xstream.converters.SingleValueConverterWrapper:
    com.thoughtworks.xstream.converters.SingleValueConverter wrapped -> wrapped
    void <init>(com.thoughtworks.xstream.converters.SingleValueConverter) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.UnmarshallingContext -> com.thoughtworks.xstream.converters.UnmarshallingContext:
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter -> com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigDecimalConverter -> com.thoughtworks.xstream.converters.basic.BigDecimalConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigIntegerConverter -> com.thoughtworks.xstream.converters.basic.BigIntegerConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BooleanConverter -> com.thoughtworks.xstream.converters.basic.BooleanConverter:
    com.thoughtworks.xstream.converters.basic.BooleanConverter TRUE_FALSE -> TRUE_FALSE
    com.thoughtworks.xstream.converters.basic.BooleanConverter YES_NO -> YES_NO
    com.thoughtworks.xstream.converters.basic.BooleanConverter BINARY -> BINARY
    java.lang.String positive -> positive
    java.lang.String negative -> negative
    boolean caseSensitive -> caseSensitive
    void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    void <init>() -> <init>
    boolean shouldConvert(java.lang.Class,java.lang.Object) -> shouldConvert
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.basic.ByteConverter -> com.thoughtworks.xstream.converters.basic.ByteConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.CharConverter -> com.thoughtworks.xstream.converters.basic.CharConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.DateConverter -> com.thoughtworks.xstream.converters.basic.DateConverter:
    java.lang.String[] DEFAULT_ACCEPTABLE_FORMATS -> DEFAULT_ACCEPTABLE_FORMATS
    java.lang.String DEFAULT_PATTERN -> DEFAULT_PATTERN
    java.lang.String DEFAULT_ERA_PATTERN -> DEFAULT_ERA_PATTERN
    java.util.TimeZone UTC -> UTC
    long ERA_START -> ERA_START
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat defaultFormat -> defaultFormat
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat defaultEraFormat -> defaultEraFormat
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat[] acceptableFormats -> acceptableFormats
    java.util.Locale locale -> locale
    void <init>() -> <init>
    void <init>(java.util.TimeZone) -> <init>
    void <init>(boolean) -> <init>
    void <init>(java.lang.String,java.lang.String[]) -> <init>
    void <init>(java.lang.String,java.lang.String[],java.util.TimeZone) -> <init>
    void <init>(java.lang.String,java.lang.String[],boolean) -> <init>
    void <init>(java.lang.String,java.lang.String[],java.util.TimeZone,boolean) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String[],java.util.Locale,java.util.TimeZone,boolean) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.basic.DoubleConverter -> com.thoughtworks.xstream.converters.basic.DoubleConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.FloatConverter -> com.thoughtworks.xstream.converters.basic.FloatConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.IntConverter -> com.thoughtworks.xstream.converters.basic.IntConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.LongConverter -> com.thoughtworks.xstream.converters.basic.LongConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.NullConverter -> com.thoughtworks.xstream.converters.basic.NullConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.basic.ShortConverter -> com.thoughtworks.xstream.converters.basic.ShortConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.StringBufferConverter -> com.thoughtworks.xstream.converters.basic.StringBufferConverter:
    void <init>() -> <init>
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringBuilderConverter -> com.thoughtworks.xstream.converters.basic.StringBuilderConverter:
    void <init>() -> <init>
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringConverter -> com.thoughtworks.xstream.converters.basic.StringConverter:
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.util.Map cache -> cache
    int lengthLimit -> lengthLimit
    void <init>(java.util.Map,int) -> <init>
    void <init>(java.util.Map) -> <init>
    void <init>(int) -> <init>
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.URIConverter -> com.thoughtworks.xstream.converters.basic.URIConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.URLConverter -> com.thoughtworks.xstream.converters.basic.URLConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.UUIDConverter -> com.thoughtworks.xstream.converters.basic.UUIDConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter -> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    com.thoughtworks.xstream.mapper.Mapper mapper() -> mapper
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.ArrayConverter -> com.thoughtworks.xstream.converters.collections.ArrayConverter:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.BitSetConverter -> com.thoughtworks.xstream.converters.collections.BitSetConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CharArrayConverter -> com.thoughtworks.xstream.converters.collections.CharArrayConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CollectionConverter -> com.thoughtworks.xstream.converters.collections.CollectionConverter:
    java.lang.Class type -> type
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection) -> populateCollection
    void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection) -> populateCollection
    void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection) -> addCurrentElementToCollection
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.MapConverter -> com.thoughtworks.xstream.converters.collections.MapConverter:
    java.lang.Class type -> type
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map) -> populateMap
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> putCurrentEntryIntoMap
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.PropertiesConverter -> com.thoughtworks.xstream.converters.collections.PropertiesConverter:
    java.lang.reflect.Field defaultsField -> defaultsField
    boolean sort -> sort
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter -> com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:
    java.lang.Class LIST -> LIST
    java.lang.Class SET -> SET
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.collections.SingletonMapConverter -> com.thoughtworks.xstream.converters.collections.SingletonMapConverter:
    java.lang.Class MAP -> MAP
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.collections.TreeMapConverter -> com.thoughtworks.xstream.converters.collections.TreeMapConverter:
    java.util.Comparator NULL_MARKER -> NULL_MARKER
    java.lang.reflect.Field comparatorField -> comparatorField
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalComparator
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap) -> unmarshalComparator
    void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator) -> populateTreeMap
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.collections.TreeMapConverter$1 -> com.thoughtworks.xstream.converters.collections.TreeMapConverter$1:
com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator -> com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    void <init>(com.thoughtworks.xstream.converters.collections.TreeMapConverter$1) -> <init>
com.thoughtworks.xstream.converters.collections.TreeSetConverter -> com.thoughtworks.xstream.converters.collections.TreeSetConverter:
    com.thoughtworks.xstream.converters.collections.TreeMapConverter treeMapConverter -> treeMapConverter
    java.lang.reflect.Field sortedMapField -> sortedMapField
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object readResolve() -> readResolve
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.collections.TreeSetConverter$1 -> com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:
    com.thoughtworks.xstream.converters.collections.TreeSetConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.collections.TreeSetConverter,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> putCurrentEntryIntoMap
com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1 -> com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:
    java.util.Map val$target -> val$target
    com.thoughtworks.xstream.converters.collections.TreeSetConverter$1 this$1 -> this$1
    void <init>(com.thoughtworks.xstream.converters.collections.TreeSetConverter$1,java.util.Map) -> <init>
    boolean add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    int size() -> size
com.thoughtworks.xstream.converters.enums.EnumConverter -> com.thoughtworks.xstream.converters.enums.EnumConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumMapConverter -> com.thoughtworks.xstream.converters.enums.EnumMapConverter:
    java.lang.reflect.Field typeField -> typeField
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.enums.EnumSetConverter -> com.thoughtworks.xstream.converters.enums.EnumSetConverter:
    java.lang.reflect.Field typeField -> typeField
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.String joinEnumValues(java.util.EnumSet) -> joinEnumValues
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter -> com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter:
    java.lang.Class enumType -> enumType
    void <init>(java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.enums.EnumToStringConverter -> com.thoughtworks.xstream.converters.enums.EnumToStringConverter:
    java.lang.Class enumType -> enumType
    java.util.Map strings -> strings
    java.util.EnumMap values -> values
    void <init>(java.lang.Class) -> <init>
    void <init>(java.lang.Class,java.util.Map) -> <init>
    void <init>(java.lang.Class,java.util.Map,java.util.EnumMap) -> <init>
    java.util.Map extractStringMap(java.lang.Class) -> extractStringMap
    void checkType(java.lang.Class) -> checkType
    java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map) -> buildValueMap
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.CharsetConverter -> com.thoughtworks.xstream.converters.extended.CharsetConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.ColorConverter -> com.thoughtworks.xstream.converters.extended.ColorConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> write
com.thoughtworks.xstream.converters.extended.CurrencyConverter -> com.thoughtworks.xstream.converters.extended.CurrencyConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DurationConverter -> com.thoughtworks.xstream.converters.extended.DurationConverter:
    javax.xml.datatype.DatatypeFactory factory -> factory
    void <init>() -> <init>
    void <init>(javax.xml.datatype.DatatypeFactory) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DurationConverter$1 -> com.thoughtworks.xstream.converters.extended.DurationConverter$1:
    void <init>() -> <init>
    javax.xml.datatype.DatatypeFactory getFactory() -> getFactory
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter -> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    java.lang.reflect.Field HANDLER -> HANDLER
    java.lang.reflect.InvocationHandler DUMMY -> DUMMY
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.ClassLoader) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> addInterfacesToXml
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter$1 -> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter$1:
    void <init>() -> <init>
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter -> com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:
    com.thoughtworks.xstream.core.util.Base64Encoder base64 -> base64
    com.thoughtworks.xstream.converters.basic.ByteConverter byteConverter -> byteConverter
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalIndividualByteElements
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.extended.FileConverter -> com.thoughtworks.xstream.converters.extended.FileConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.FontConverter -> com.thoughtworks.xstream.converters.extended.FontConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter textAttributeConverter -> textAttributeConverter
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ISO8601DateConverter -> com.thoughtworks.xstream.converters.extended.ISO8601DateConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter:
    org.joda.time.format.DateTimeFormatter[] formattersUTC -> formattersUTC
    org.joda.time.format.DateTimeFormatter[] formattersNoUTC -> formattersNoUTC
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter:
    java.lang.String PADDING -> PADDING
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.JavaClassConverter -> com.thoughtworks.xstream.converters.extended.JavaClassConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    void <init>(com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.JavaFieldConverter -> com.thoughtworks.xstream.converters.extended.JavaFieldConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter javaClassConverter -> javaClassConverter
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    void <init>(com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>(com.thoughtworks.xstream.converters.SingleValueConverter,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.JavaMethodConverter -> com.thoughtworks.xstream.converters.extended.JavaMethodConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter javaClassConverter -> javaClassConverter
    void <init>(com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>(com.thoughtworks.xstream.converters.SingleValueConverter) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[]) -> marshalMethod
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.LocaleConverter -> com.thoughtworks.xstream.converters.extended.LocaleConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    int[] underscorePositions(java.lang.String) -> underscorePositions
com.thoughtworks.xstream.converters.extended.LookAndFeelConverter -> com.thoughtworks.xstream.converters.extended.LookAndFeelConverter:
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.extended.NamedArrayConverter -> com.thoughtworks.xstream.converters.extended.NamedArrayConverter:
    java.lang.Class arrayType -> arrayType
    java.lang.String itemName -> itemName
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.NamedCollectionConverter -> com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:
    java.lang.String name -> name
    java.lang.Class type -> type
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.Class) -> <init>
    void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.Class) -> <init>
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
com.thoughtworks.xstream.converters.extended.NamedMapConverter -> com.thoughtworks.xstream.converters.extended.NamedMapConverter:
    java.lang.String entryName -> entryName
    java.lang.String keyName -> keyName
    java.lang.Class keyType -> keyType
    java.lang.String valueName -> valueName
    java.lang.Class valueType -> valueType
    boolean keyAsAttribute -> keyAsAttribute
    boolean valueAsAttribute -> valueAsAttribute
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    com.thoughtworks.xstream.mapper.Mapper enumMapper -> enumMapper
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class) -> <init>
    void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup) -> <init>
    void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup) -> <init>
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class) -> getSingleValueConverter
    void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter -> com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor editor -> editor
    java.lang.Class type -> type
    void <init>(java.lang.Class,java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.RegexPatternConverter -> com.thoughtworks.xstream.converters.extended.RegexPatternConverter:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.Converter) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.SqlDateConverter -> com.thoughtworks.xstream.converters.extended.SqlDateConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimeConverter -> com.thoughtworks.xstream.converters.extended.SqlTimeConverter:
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat format -> format
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.StackTraceElementConverter -> com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:
    java.util.regex.Pattern PATTERN -> PATTERN
    com.thoughtworks.xstream.converters.extended.StackTraceElementFactory FACTORY -> FACTORY
    void <init>() -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.extended.StackTraceElementFactory -> com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:
    void <init>() -> <init>
    java.lang.StackTraceElement nativeMethodElement(java.lang.String,java.lang.String) -> nativeMethodElement
    java.lang.StackTraceElement unknownSourceElement(java.lang.String,java.lang.String) -> unknownSourceElement
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String) -> element
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String,int) -> element
    java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int) -> create
    void setField(java.lang.StackTraceElement,java.lang.String,java.lang.Object) -> setField
com.thoughtworks.xstream.converters.extended.StackTraceElementFactory15 -> com.thoughtworks.xstream.converters.extended.StackTraceElementFactory15:
    void <init>() -> <init>
    java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int) -> create
com.thoughtworks.xstream.converters.extended.SubjectConverter -> com.thoughtworks.xstream.converters.extended.SubjectConverter:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrincipals
    void marshalPublicCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPublicCredentials
    void marshalPrivateCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrivateCredentials
    void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshalReadOnly
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.util.Set unmarshalPrincipals(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrincipals
    java.util.Set unmarshalPublicCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPublicCredentials
    java.util.Set unmarshalPrivateCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrivateCredentials
    boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshalReadOnly
    java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> populateSet
com.thoughtworks.xstream.converters.extended.TextAttributeConverter -> com.thoughtworks.xstream.converters.extended.TextAttributeConverter:
    void <init>() -> <init>
com.thoughtworks.xstream.converters.extended.ThrowableConverter -> com.thoughtworks.xstream.converters.extended.ThrowableConverter:
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    void <init>(com.thoughtworks.xstream.converters.Converter) -> <init>
    void <init>(com.thoughtworks.xstream.converters.ConverterLookup) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    com.thoughtworks.xstream.converters.Converter getConverter() -> getConverter
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter -> com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:
    java.lang.String STRUCTURE_MARKER -> STRUCTURE_MARKER
    java.lang.Class type -> type
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.mapper.Mapper enumMapper -> enumMapper
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    java.lang.reflect.Field valueField -> valueField
    void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String) -> <init>
    void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String,java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    boolean fieldIsEqual(com.thoughtworks.xstream.core.util.FastField) -> fieldIsEqual
    com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$000
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider access$100(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$100
    boolean access$200(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter,com.thoughtworks.xstream.core.util.FastField) -> access$200
    com.thoughtworks.xstream.mapper.Mapper access$300(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$300
    com.thoughtworks.xstream.converters.ConverterLookup access$400(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$400
    java.lang.reflect.Field access$500(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$500
com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1 -> com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    java.lang.Class val$sourceType -> val$sourceType
    java.lang.Class[] val$definingType -> val$definingType
    java.lang.Class[] val$fieldType -> val$fieldType
    java.lang.Object[] val$realValue -> val$realValue
    java.lang.String[] val$tagValue -> val$tagValue
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter,java.util.Map,java.lang.Class,java.lang.Class[],java.lang.Class[],java.lang.Object[],java.lang.String[],com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> <init>
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.extended.ToStringConverter -> com.thoughtworks.xstream.converters.extended.ToStringConverter:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor ctor -> ctor
    void <init>(java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper -> com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean isEnum(java.lang.Class) -> isEnum
    boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class) -> shouldLookForSingleValueConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.mapper.Mapper createEnumMapper(com.thoughtworks.xstream.mapper.Mapper) -> createEnumMapper
com.thoughtworks.xstream.converters.javabean.BeanProperty -> com.thoughtworks.xstream.converters.javabean.BeanProperty:
    java.lang.Class memberClass -> memberClass
    java.lang.String propertyName -> propertyName
    java.lang.Class type -> type
    java.lang.reflect.Method getter -> getter
    java.lang.reflect.Method setter -> setter
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    void <init>(java.lang.Class,java.lang.String,java.lang.Class) -> <init>
    java.lang.Class getBeanClass() -> getBeanClass
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    boolean isReadable() -> isReadable
    boolean isWritable() -> isWritable
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object set(java.lang.Object,java.lang.Object) -> set
    void setGetterMethod(java.lang.reflect.Method) -> setGetterMethod
    void setSetterMethod(java.lang.reflect.Method) -> setSetterMethod
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.javabean.BeanProvider -> com.thoughtworks.xstream.converters.javabean.BeanProvider:
    java.lang.Object[] NO_PARAMS -> NO_PARAMS
    com.thoughtworks.xstream.converters.javabean.PropertyDictionary propertyDictionary -> propertyDictionary
    void <init>() -> <init>
    void <init>(java.util.Comparator) -> <init>
    void <init>(com.thoughtworks.xstream.converters.javabean.PropertyDictionary) -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor) -> visitSerializableProperties
    void writeProperty(java.lang.Object,java.lang.String,java.lang.Object) -> writeProperty
    java.lang.Class getPropertyType(java.lang.Object,java.lang.String) -> getPropertyType
    boolean propertyDefinedInClass(java.lang.String,java.lang.Class) -> propertyDefinedInClass
    boolean canInstantiate(java.lang.Class) -> canInstantiate
    java.lang.reflect.Constructor getDefaultConstrutor(java.lang.Class) -> getDefaultConstrutor
    java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object) -> getSerializableProperties
    boolean canStreamProperty(java.beans.PropertyDescriptor) -> canStreamProperty
    boolean propertyWriteable(java.lang.String,java.lang.Class) -> propertyWriteable
    java.beans.PropertyDescriptor getProperty(java.lang.String,java.lang.Class) -> getProperty
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor -> com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor:
com.thoughtworks.xstream.converters.javabean.ComparingPropertySorter -> com.thoughtworks.xstream.converters.javabean.ComparingPropertySorter:
    java.util.Comparator comparator -> comparator
    void <init>(java.util.Comparator) -> <init>
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.javabean.JavaBeanProvider beanProvider -> beanProvider
    java.lang.Class type -> type
    java.lang.String classAttributeIdentifier -> classAttributeIdentifier
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.Class) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider,java.lang.Class) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String) -> determineType
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1 -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.lang.String val$classAttributeName -> val$classAttributeName
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.converters.javabean.JavaBeanConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.javabean.JavaBeanConverter,java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,com.thoughtworks.xstream.converters.MarshallingContext) -> <init>
    boolean shouldVisit(java.lang.String,java.lang.Class) -> shouldVisit
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
    void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class) -> writeField
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$2 -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$2:
    com.thoughtworks.xstream.converters.javabean.JavaBeanConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.javabean.JavaBeanConverter) -> <init>
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException:
    void <init>(java.lang.String) -> <init>
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicatePropertyException -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicatePropertyException:
    void <init>(java.lang.String) -> <init>
com.thoughtworks.xstream.converters.javabean.JavaBeanProvider -> com.thoughtworks.xstream.converters.javabean.JavaBeanProvider:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor) -> visitSerializableProperties
    void writeProperty(java.lang.Object,java.lang.String,java.lang.Object) -> writeProperty
    java.lang.Class getPropertyType(java.lang.Object,java.lang.String) -> getPropertyType
    boolean propertyDefinedInClass(java.lang.String,java.lang.Class) -> propertyDefinedInClass
    boolean canInstantiate(java.lang.Class) -> canInstantiate
com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor -> com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor:
    boolean shouldVisit(java.lang.String,java.lang.Class) -> shouldVisit
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.javabean.NativePropertySorter -> com.thoughtworks.xstream.converters.javabean.NativePropertySorter:
    void <init>() -> <init>
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.javabean.PropertyDictionary -> com.thoughtworks.xstream.converters.javabean.PropertyDictionary:
    java.util.Map propertyNameCache -> propertyNameCache
    com.thoughtworks.xstream.converters.javabean.PropertySorter sorter -> sorter
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.javabean.PropertySorter) -> <init>
    java.util.Iterator serializablePropertiesFor(java.lang.Class) -> serializablePropertiesFor
    com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String) -> property
    java.util.Iterator propertiesFor(java.lang.Class) -> propertiesFor
    java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String) -> propertyDescriptor
    java.util.Map buildMap(java.lang.Class) -> buildMap
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.javabean.PropertySorter -> com.thoughtworks.xstream.converters.javabean.PropertySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter -> com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:
    java.util.Map instanceMaps -> instanceMaps
    java.lang.reflect.Method getName -> getName
    java.lang.Class type -> type
    java.util.Map attributeMap -> attributeMap
    void <init>(java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String getName(java.text.AttributedCharacterIterator$Attribute) -> getName
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.Object readResolve() -> readResolve
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker serializationMethodInvoker -> serializationMethodInvoker
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider -> pureJavaReflectionProvider
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    boolean canAccess(java.lang.Class) -> canAccess
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    boolean shouldUnmarshalTransientFields() -> shouldUnmarshalTransientFields
    boolean shouldUnmarshalField(java.lang.reflect.Field) -> shouldUnmarshalField
    void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String) -> handleUnknownField
    void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String) -> writeValueToImplicitCollection
    java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> readDeclaringClass
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:
    java.util.Set writtenAttributes -> writtenAttributes
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.util.List val$fields -> val$fields
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.Map,java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.List) -> <init>
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:
    java.util.List val$fields -> val$fields
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map) -> <init>
    void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> writeField
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3:
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter) -> <init>
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$ArraysList -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$ArraysList:
    java.lang.Class physicalFieldType -> physicalFieldType
    void <init>(java.lang.Class) -> <init>
    java.lang.Object toPhysicalArray() -> toPhysicalArray
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException:
    void <init>(java.lang.String) -> <init>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$FieldInfo -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$FieldInfo:
    java.lang.String fieldName -> fieldName
    java.lang.Class type -> type
    java.lang.Class definedIn -> definedIn
    java.lang.Object value -> value
    void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> <init>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:
    java.util.Map map -> map
    java.lang.String keyFieldName -> keyFieldName
    java.util.Map fieldCache -> fieldCache
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.Map,java.lang.String) -> <init>
    boolean add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    int size() -> size
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException:
    void <init>(java.lang.String,java.lang.String) -> <init>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String CALLBACK_MARKER -> CALLBACK_MARKER
    java.util.Map fieldCache -> fieldCache
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,java.lang.ClassLoader) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object) -> getCallbacks
    java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory) -> createCallbackIndexMap
    java.lang.Object[] createNullArguments(java.lang.Class[]) -> createNullArguments
    net.sf.cglib.proxy.Callback createReverseEngineeredCallbackOfProperType(net.sf.cglib.proxy.Callback,int,java.util.Map) -> createReverseEngineeredCallbackOfProperType
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List) -> readCallback
    java.lang.Object create(net.sf.cglib.proxy.Enhancer,java.util.List,boolean) -> create
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object readResolve() -> readResolve
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> val$visitor
    com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> <init>
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:
    java.util.Map callbackIndexMap -> callbackIndexMap
    void <init>(java.util.Map) -> <init>
    int accept(java.lang.reflect.Method) -> accept
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:
    java.lang.Integer index -> index
    java.util.Map indexMap -> indexMap
    void <init>(int,java.util.Map) -> <init>
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.ClassLoader) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter) -> access$000
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1 -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> <init>
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2 -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> val$context
    java.io.Externalizable val$externalizable -> val$externalizable
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.io.Externalizable) -> <init>
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.FieldDictionary -> com.thoughtworks.xstream.converters.reflection.FieldDictionary:
    java.util.Map keyedByFieldNameCache -> keyedByFieldNameCache
    java.util.Map keyedByFieldKeyCache -> keyedByFieldKeyCache
    com.thoughtworks.xstream.converters.reflection.FieldKeySorter sorter -> sorter
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.FieldKeySorter) -> <init>
    void init() -> init
    java.util.Iterator serializableFieldsFor(java.lang.Class) -> serializableFieldsFor
    java.util.Iterator fieldsFor(java.lang.Class) -> fieldsFor
    java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class) -> field
    java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class) -> fieldOrNull
    java.util.Map buildMap(java.lang.Class,boolean) -> buildMap
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.FieldKey -> com.thoughtworks.xstream.converters.reflection.FieldKey:
    java.lang.String fieldName -> fieldName
    java.lang.Class declaringClass -> declaringClass
    int depth -> depth
    int order -> order
    void <init>(java.lang.String,java.lang.Class,int) -> <init>
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    int getDepth() -> getDepth
    int getOrder() -> getOrder
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.converters.reflection.FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.FieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter:
    void <init>() -> <init>
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.MissingFieldException -> com.thoughtworks.xstream.converters.reflection.MissingFieldException:
    java.lang.String fieldName -> fieldName
    java.lang.String className -> className
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getClassName() -> getClassName
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter:
    void <init>() -> <init>
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter$1:
    com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.ObjectAccessException -> com.thoughtworks.xstream.converters.reflection.ObjectAccessException:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider -> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:
    java.util.Map serializedDataCache -> serializedDataCache
    com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary -> fieldDictionary
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.Object instantiateUsingSerialization(java.lang.Class) -> instantiateUsingSerialization
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    boolean fieldModifiersSupported(java.lang.reflect.Field) -> fieldModifiersSupported
    void validateFieldAccess(java.lang.reflect.Field) -> validateFieldAccess
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String) -> getFieldOrNull
    void setFieldDictionary(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> setFieldDictionary
    java.lang.Object readResolve() -> readResolve
    void init() -> init
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1:
    java.lang.Class val$type -> val$type
    com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider,java.io.InputStream,java.lang.Class) -> <init>
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
com.thoughtworks.xstream.converters.reflection.ReflectionConverter -> com.thoughtworks.xstream.converters.reflection.ReflectionConverter:
    java.lang.Class eventHandlerType -> eventHandlerType
    java.lang.Class type -> type
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,java.lang.Class) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.reflection.ReflectionProvider -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String) -> getFieldOrNull
com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor:
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper -> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped -> wrapped
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String) -> getFieldOrNull
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker -> com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker:
    void <init>(com.thoughtworks.xstream.converters.Converter,java.lang.Object) -> <init>
com.thoughtworks.xstream.converters.reflection.SerializableConverter -> com.thoughtworks.xstream.converters.reflection.SerializableConverter:
    java.lang.String ELEMENT_NULL -> ELEMENT_NULL
    java.lang.String ELEMENT_DEFAULT -> ELEMENT_DEFAULT
    java.lang.String ELEMENT_UNSERIALIZABLE_PARENTS -> ELEMENT_UNSERIALIZABLE_PARENTS
    java.lang.String ATTRIBUTE_CLASS -> ATTRIBUTE_CLASS
    java.lang.String ATTRIBUTE_SERIALIZATION -> ATTRIBUTE_SERIALIZATION
    java.lang.String ATTRIBUTE_VALUE_CUSTOM -> ATTRIBUTE_VALUE_CUSTOM
    java.lang.String ELEMENT_FIELDS -> ELEMENT_FIELDS
    java.lang.String ELEMENT_FIELD -> ELEMENT_FIELD
    java.lang.String ATTRIBUTE_NAME -> ATTRIBUTE_NAME
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,java.lang.ClassLoader) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    boolean isSerializable(java.lang.Class) -> isSerializable
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object) -> marshalUnserializableParent
    java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> readField
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshalConditionally
    java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshalConditionally
    java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> access$000
com.thoughtworks.xstream.converters.reflection.SerializableConverter$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    java.lang.Class[] val$currentType -> val$currentType
    java.lang.Object val$source -> val$source
    boolean[] val$writtenClassWrapper -> val$writtenClassWrapper
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.SerializableConverter,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Class[],java.lang.Object,boolean[]) -> <init>
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> val$context
    java.lang.Object val$result -> val$result
    java.lang.Class[] val$currentType -> val$currentType
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.SerializableConverter,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class[]) -> <init>
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1:
    java.io.ObjectInputValidation val$validation -> val$validation
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 this$1 -> this$1
    void <init>(com.thoughtworks.xstream.converters.reflection.SerializableConverter$2,java.io.ObjectInputValidation) -> <init>
    void run() -> run
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:
    void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> val$visitor
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> <init>
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker -> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:
    java.lang.reflect.Method NO_METHOD -> NO_METHOD
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    com.thoughtworks.xstream.core.util.FastField[] OBJECT_TYPE_FIELDS -> OBJECT_TYPE_FIELDS
    java.util.Map cache -> cache
    void <init>() -> <init>
    java.lang.Object callReadResolve(java.lang.Object) -> callReadResolve
    java.lang.Object callWriteReplace(java.lang.Object) -> callWriteReplace
    boolean supportsReadObject(java.lang.Class,boolean) -> supportsReadObject
    void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream) -> callReadObject
    boolean supportsWriteObject(java.lang.Class,boolean) -> supportsWriteObject
    void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream) -> callWriteObject
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) -> getMethod
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    void flushCache() -> flushCache
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker$1 -> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker$1:
    void <init>() -> <init>
    void noMethod() -> noMethod
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:
    java.util.Map map -> map
    void <init>() -> <init>
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
    void registerFieldOrder(java.lang.Class,java.lang.String[]) -> registerFieldOrder
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator -> com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator:
    java.lang.String[] fieldOrder -> fieldOrder
    com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter,java.lang.String[]) -> <init>
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider -> com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> <init>
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider -> com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:
    sun.misc.Unsafe unsafe -> unsafe
    java.lang.Exception exception -> exception
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void validateFieldAccess(java.lang.reflect.Field) -> validateFieldAccess
    java.lang.Object readResolve() -> readResolve
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.converters.reflection.SunUnsafeReflectionProvider -> com.thoughtworks.xstream.converters.reflection.SunUnsafeReflectionProvider:
    java.util.Map fieldOffsetCache -> fieldOffsetCache
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> <init>
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> write
    long getFieldOffset(java.lang.reflect.Field) -> getFieldOffset
    java.lang.Object readResolve() -> readResolve
    void init() -> init
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter:
    void <init>() -> <init>
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter$1:
    com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.AbstractReferenceMarshaller -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller:
    com.thoughtworks.xstream.core.util.ObjectIdDictionary references -> references
    com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements -> implicitElements
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    com.thoughtworks.xstream.io.path.Path lastPath -> lastPath
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
    com.thoughtworks.xstream.core.util.ObjectIdDictionary access$000(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$000
    com.thoughtworks.xstream.io.path.PathTracker access$100(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$100
    com.thoughtworks.xstream.core.util.ObjectIdDictionary access$200(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$200
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1 -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:
    java.lang.Object val$newReferenceKey -> val$newReferenceKey
    com.thoughtworks.xstream.io.path.Path val$currentPath -> val$currentPath
    com.thoughtworks.xstream.core.AbstractReferenceMarshaller this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.AbstractReferenceMarshaller,java.lang.Object,com.thoughtworks.xstream.io.path.Path) -> <init>
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    java.lang.Object get(java.lang.Object) -> get
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    void convertAnother(java.lang.Object) -> convertAnother
    void replace(java.lang.Object,java.lang.Object) -> replace
    java.lang.Object lookupReference(java.lang.Object) -> lookupReference
    com.thoughtworks.xstream.io.path.Path currentPath() -> currentPath
    void registerImplicit(java.lang.Object) -> registerImplicit
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$Id -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$Id:
    java.lang.Object item -> item
    com.thoughtworks.xstream.io.path.Path path -> path
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path) -> <init>
    java.lang.Object getItem() -> getItem
    com.thoughtworks.xstream.io.path.Path getPath() -> getPath
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException:
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path) -> <init>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller -> com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:
    java.lang.Object NULL -> NULL
    java.util.Map values -> values
    com.thoughtworks.xstream.core.util.FastStack parentStack -> parentStack
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy -> com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:
    void <init>() -> <init>
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.BaseException -> com.thoughtworks.xstream.core.BaseException:
    void <init>(java.lang.String) -> <init>
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.core.Caching -> com.thoughtworks.xstream.core.Caching:
    void flushCache() -> flushCache
com.thoughtworks.xstream.core.ClassLoaderReference -> com.thoughtworks.xstream.core.ClassLoaderReference:
    java.lang.ClassLoader reference -> reference
    void <init>(java.lang.ClassLoader) -> <init>
    java.lang.ClassLoader getReference() -> getReference
    void setReference(java.lang.ClassLoader) -> setReference
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.DefaultConverterLookup -> com.thoughtworks.xstream.core.DefaultConverterLookup:
    com.thoughtworks.xstream.core.util.PrioritizedList converters -> converters
    java.util.Map typeToConverterMap -> typeToConverterMap
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.JVM -> com.thoughtworks.xstream.core.JVM:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    boolean isAWTAvailable -> isAWTAvailable
    boolean isSwingAvailable -> isSwingAvailable
    boolean isSQLAvailable -> isSQLAvailable
    boolean canAllocateWithUnsafe -> canAllocateWithUnsafe
    boolean canWriteWithUnsafe -> canWriteWithUnsafe
    boolean optimizedTreeSetAddAll -> optimizedTreeSetAddAll
    boolean optimizedTreeMapPutAll -> optimizedTreeMapPutAll
    boolean canParseUTCDateFormat -> canParseUTCDateFormat
    boolean canCreateDerivedObjectOutputStream -> canCreateDerivedObjectOutputStream
    java.lang.String vendor -> vendor
    float majorJavaVersion -> majorJavaVersion
    float DEFAULT_JAVA_VERSION -> DEFAULT_JAVA_VERSION
    boolean reverseFieldOrder -> reverseFieldOrder
    java.lang.Class reflectionProviderType -> reflectionProviderType
    void <init>() -> <init>
    float getMajorJavaVersion() -> getMajorJavaVersion
    boolean is14() -> is14
    boolean is15() -> is15
    boolean is16() -> is16
    boolean is17() -> is17
    boolean is18() -> is18
    boolean isIBM() -> isIBM
    boolean isAndroid() -> isAndroid
    java.lang.Class loadClassForName(java.lang.String) -> loadClassForName
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.Class loadClassForName(java.lang.String,boolean) -> loadClassForName
    java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider() -> newReflectionProvider
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> newReflectionProvider
    java.lang.Class getStaxInputFactory() -> getStaxInputFactory
    java.lang.Class getStaxOutputFactory() -> getStaxOutputFactory
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider() -> bestReflectionProvider
    boolean canUseSunUnsafeReflectionProvider() -> canUseSunUnsafeReflectionProvider
    boolean canUseSunLimitedUnsafeReflectionProvider() -> canUseSunLimitedUnsafeReflectionProvider
    boolean reverseFieldDefinition() -> reverseFieldDefinition
    boolean isAWTAvailable() -> isAWTAvailable
    boolean supportsAWT() -> supportsAWT
    boolean isSwingAvailable() -> isSwingAvailable
    boolean supportsSwing() -> supportsSwing
    boolean isSQLAvailable() -> isSQLAvailable
    boolean supportsSQL() -> supportsSQL
    boolean hasOptimizedTreeSetAddAll() -> hasOptimizedTreeSetAddAll
    boolean hasOptimizedTreeMapPutAll() -> hasOptimizedTreeMapPutAll
    boolean canParseUTCDateFormat() -> canParseUTCDateFormat
    boolean canCreateDerivedObjectOutputStream() -> canCreateDerivedObjectOutputStream
    void flushCache() -> flushCache
    void main(java.lang.String[]) -> main
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.JVM$1 -> com.thoughtworks.xstream.core.JVM$1:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.JVM$Test -> com.thoughtworks.xstream.core.JVM$Test:
    java.lang.Object o -> o
    char c -> c
    byte b -> b
    short s -> s
    int i -> i
    long l -> l
    float f -> f
    double d -> d
    boolean bool -> bool
    void <init>() -> <init>
com.thoughtworks.xstream.core.MapBackedDataHolder -> com.thoughtworks.xstream.core.MapBackedDataHolder:
    java.util.Map map -> map
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.core.ReferenceByIdMarshaller -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller:
    com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator idGenerator -> idGenerator
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator) -> <init>
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator:
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy:
    void <init>() -> <init>
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.ReferenceByXPathMarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathMarshaller:
    int mode -> mode
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,int) -> <init>
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy:
    int RELATIVE -> RELATIVE
    int ABSOLUTE -> ABSOLUTE
    int SINGLE_NODE -> SINGLE_NODE
    int mode -> mode
    void <init>(int) -> <init>
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isNameEncoding -> isNameEncoding
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.ReferencingMarshallingContext -> com.thoughtworks.xstream.core.ReferencingMarshallingContext:
    com.thoughtworks.xstream.io.path.Path currentPath() -> currentPath
    java.lang.Object lookupReference(java.lang.Object) -> lookupReference
    void replace(java.lang.Object,java.lang.Object) -> replace
    void registerImplicit(java.lang.Object) -> registerImplicit
com.thoughtworks.xstream.core.SequenceGenerator -> com.thoughtworks.xstream.core.SequenceGenerator:
    int counter -> counter
    void <init>(int) -> <init>
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.TreeMarshaller -> com.thoughtworks.xstream.core.TreeMarshaller:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter writer -> writer
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects -> parentObjects
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> start
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException -> com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException:
    void <init>(java.lang.String) -> <init>
com.thoughtworks.xstream.core.TreeMarshallingStrategy -> com.thoughtworks.xstream.core.TreeMarshallingStrategy:
    void <init>() -> <init>
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.TreeUnmarshaller -> com.thoughtworks.xstream.core.TreeUnmarshaller:
    java.lang.Object root -> root
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.FastStack types -> types
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    com.thoughtworks.xstream.core.util.PrioritizedList validationList -> validationList
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object) -> addInformationTo
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder) -> start
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.util.ArrayIterator -> com.thoughtworks.xstream.core.util.ArrayIterator:
    java.lang.Object array -> array
    int idx -> idx
    int length -> length
    void <init>(java.lang.Object) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.core.util.Base64Encoder -> com.thoughtworks.xstream.core.util.Base64Encoder:
    char[] SIXTY_FOUR_CHARS -> SIXTY_FOUR_CHARS
    int[] REVERSE_MAPPING -> REVERSE_MAPPING
    void <init>() -> <init>
    java.lang.String encode(byte[]) -> encode
    byte[] decode(java.lang.String) -> decode
    int mapCharToInt(java.io.Reader) -> mapCharToInt
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.util.ClassLoaderReference -> com.thoughtworks.xstream.core.util.ClassLoaderReference:
    java.lang.ClassLoader reference -> reference
    void <init>(java.lang.ClassLoader) -> <init>
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.ClassLoader getReference() -> getReference
    void setReference(java.lang.ClassLoader) -> setReference
    java.lang.Object writeReplace() -> writeReplace
com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement -> com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement:
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.util.Cloneables -> com.thoughtworks.xstream.core.util.Cloneables:
    void <init>() -> <init>
    java.lang.Object clone(java.lang.Object) -> clone
    java.lang.Object cloneIfPossible(java.lang.Object) -> cloneIfPossible
com.thoughtworks.xstream.core.util.CompositeClassLoader -> com.thoughtworks.xstream.core.util.CompositeClassLoader:
    java.lang.ref.ReferenceQueue queue -> queue
    java.util.List classLoaders -> classLoaders
    void <init>() -> <init>
    void add(java.lang.ClassLoader) -> add
    void addInternal(java.lang.ClassLoader) -> addInternal
    java.lang.Class loadClass(java.lang.String) -> loadClass
    void cleanup() -> cleanup
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.util.CompositeClassLoader$1 -> com.thoughtworks.xstream.core.util.CompositeClassLoader$1:
    com.thoughtworks.xstream.core.util.CompositeClassLoader this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.CompositeClassLoader,int) -> <init>
    boolean addAll(java.util.Collection) -> addAll
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.core.util.CustomObjectInputStream -> com.thoughtworks.xstream.core.util.CustomObjectInputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback) -> getInstance
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,java.lang.ClassLoader) -> getInstance
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference) -> getInstance
    void <init>(com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,java.lang.ClassLoader) -> <init>
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback() -> peekCallback
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    void defaultReadObject() -> defaultReadObject
    java.lang.Object readObjectOverride() -> readObjectOverride
    java.lang.Object readUnshared() -> readUnshared
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    int readInt() -> readInt
    char readChar() -> readChar
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    long readLong() -> readLong
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    java.lang.String readUTF() -> readUTF
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    java.io.ObjectInputStream$GetField readFields() -> readFields
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
    int available() -> available
    java.lang.String readLine() -> readLine
    int skipBytes(int) -> skipBytes
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField -> com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:
    java.util.Map fields -> fields
    com.thoughtworks.xstream.core.util.CustomObjectInputStream this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.CustomObjectInputStream,java.util.Map) -> <init>
    java.io.ObjectStreamClass getObjectStreamClass() -> getObjectStreamClass
    java.lang.Object get(java.lang.String) -> get
    boolean defaulted(java.lang.String) -> defaulted
    byte get(java.lang.String,byte) -> get
    char get(java.lang.String,char) -> get
    double get(java.lang.String,double) -> get
    float get(java.lang.String,float) -> get
    int get(java.lang.String,int) -> get
    long get(java.lang.String,long) -> get
    short get(java.lang.String,short) -> get
    boolean get(java.lang.String,boolean) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback:
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.core.util.CustomObjectOutputStream -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    com.thoughtworks.xstream.core.util.FastStack customFields -> customFields
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> getInstance
    void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> <init>
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback() -> peekCallback
    void defaultWriteObject() -> defaultWriteObject
    void writeObjectOverride(java.lang.Object) -> writeObjectOverride
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeInt(int) -> writeInt
    void writeChar(int) -> writeChar
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void write(byte[]) -> write
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.io.ObjectOutputStream$PutField putFields() -> putFields
    void writeFields() -> writeFields
    void reset() -> reset
    void useProtocolVersion(int) -> useProtocolVersion
    void writeBytes(java.lang.String) -> writeBytes
    void writeUnshared(java.lang.Object) -> writeUnshared
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1 -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1:
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:
    java.util.Map fields -> fields
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream) -> <init>
    java.util.Map asMap() -> asMap
    void write(java.io.ObjectOutput) -> write
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,byte) -> put
    void put(java.lang.String,char) -> put
    void put(java.lang.String,double) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,short) -> put
    void put(java.lang.String,boolean) -> put
    void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1) -> <init>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback:
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.core.util.DependencyInjectionFactory -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory:
    void <init>() -> <init>
    java.lang.Object newInstance(java.lang.Class,java.lang.Object[]) -> newInstance
    java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet) -> newInstance
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$1 -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory$1:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$TypedValue -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory$TypedValue:
    java.lang.Class type -> type
    java.lang.Object value -> value
    void <init>(java.lang.Class,java.lang.Object) -> <init>
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.FastField -> com.thoughtworks.xstream.core.util.FastField:
    java.lang.String name -> name
    java.lang.String declaringClass -> declaringClass
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getDeclaringClass() -> getDeclaringClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.FastStack -> com.thoughtworks.xstream.core.util.FastStack:
    java.lang.Object[] stack -> stack
    int pointer -> pointer
    void <init>(int) -> <init>
    java.lang.Object push(java.lang.Object) -> push
    void popSilently() -> popSilently
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    java.lang.Object replace(java.lang.Object) -> replace
    void replaceSilently(java.lang.Object) -> replaceSilently
    int size() -> size
    boolean hasStuff() -> hasStuff
    java.lang.Object get(int) -> get
    void resizeStack(int) -> resizeStack
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.Fields -> com.thoughtworks.xstream.core.util.Fields:
    void <init>() -> <init>
    java.lang.reflect.Field locate(java.lang.Class,java.lang.Class,boolean) -> locate
    java.lang.reflect.Field find(java.lang.Class,java.lang.String) -> find
    void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> write
    java.lang.Object read(java.lang.reflect.Field,java.lang.Object) -> read
com.thoughtworks.xstream.core.util.HierarchicalStreams -> com.thoughtworks.xstream.core.util.HierarchicalStreams:
    void <init>() -> <init>
    java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassType
    java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassAttribute
com.thoughtworks.xstream.core.util.ObjectIdDictionary -> com.thoughtworks.xstream.core.util.ObjectIdDictionary:
    java.util.Map map -> map
    java.lang.ref.ReferenceQueue queue -> queue
    void <init>() -> <init>
    void associateId(java.lang.Object,java.lang.Object) -> associateId
    java.lang.Object lookupId(java.lang.Object) -> lookupId
    boolean containsId(java.lang.Object) -> containsId
    void removeId(java.lang.Object) -> removeId
    int size() -> size
    void cleanup() -> cleanup
    java.lang.ref.ReferenceQueue access$000(com.thoughtworks.xstream.core.util.ObjectIdDictionary) -> access$000
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper:
    java.lang.Object obj -> obj
    int hashCode -> hashCode
    void <init>(java.lang.Object) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> get
com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper:
    int hashCode -> hashCode
    com.thoughtworks.xstream.core.util.ObjectIdDictionary this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.ObjectIdDictionary,java.lang.Object) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.ObjectIdDictionary$Wrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$Wrapper:
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> get
com.thoughtworks.xstream.core.util.OrderRetainingMap -> com.thoughtworks.xstream.core.util.OrderRetainingMap:
    com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet keyOrder -> keyOrder
    java.util.List valueOrder -> valueOrder
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    void putAll(java.util.Map) -> putAll
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
com.thoughtworks.xstream.core.util.OrderRetainingMap$1 -> com.thoughtworks.xstream.core.util.OrderRetainingMap$1:
com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet -> com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.core.util.OrderRetainingMap$1) -> <init>
com.thoughtworks.xstream.core.util.Pool -> com.thoughtworks.xstream.core.util.Pool:
    int initialPoolSize -> initialPoolSize
    int maxPoolSize -> maxPoolSize
    com.thoughtworks.xstream.core.util.Pool$Factory factory -> factory
    java.lang.Object[] pool -> pool
    int nextAvailable -> nextAvailable
    java.lang.Object mutex -> mutex
    void <init>(int,int,com.thoughtworks.xstream.core.util.Pool$Factory) -> <init>
    java.lang.Object fetchFromPool() -> fetchFromPool
    void putInPool(java.lang.Object) -> putInPool
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.util.Pool$Factory -> com.thoughtworks.xstream.core.util.Pool$Factory:
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.PresortedMap -> com.thoughtworks.xstream.core.util.PresortedMap:
    com.thoughtworks.xstream.core.util.PresortedMap$ArraySet set -> set
    java.util.Comparator comparator -> comparator
    void <init>() -> <init>
    void <init>(java.util.Comparator) -> <init>
    void <init>(java.util.Comparator,com.thoughtworks.xstream.core.util.PresortedMap$ArraySet) -> <init>
    java.util.Comparator comparator() -> comparator
    java.util.Set entrySet() -> entrySet
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.Set keySet() -> keySet
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
com.thoughtworks.xstream.core.util.PresortedMap$1 -> com.thoughtworks.xstream.core.util.PresortedMap$1:
    java.lang.Object val$key -> val$key
    java.lang.Object val$value -> val$value
    com.thoughtworks.xstream.core.util.PresortedMap this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.PresortedMap,java.lang.Object,java.lang.Object) -> <init>
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.thoughtworks.xstream.core.util.PresortedMap$ArraySet -> com.thoughtworks.xstream.core.util.PresortedMap$ArraySet:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.core.util.PresortedMap$1) -> <init>
com.thoughtworks.xstream.core.util.PresortedMap$ArraySetComparator -> com.thoughtworks.xstream.core.util.PresortedMap$ArraySetComparator:
    java.util.ArrayList list -> list
    java.util.Map$Entry[] array -> array
    void <init>(java.util.ArrayList) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.util.PresortedSet -> com.thoughtworks.xstream.core.util.PresortedSet:
    java.util.List list -> list
    java.util.Comparator comparator -> comparator
    void <init>() -> <init>
    void <init>(java.util.Comparator) -> <init>
    void <init>(java.util.Comparator,java.util.Collection) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.util.List subList(int,int) -> subList
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.thoughtworks.xstream.core.util.Primitives -> com.thoughtworks.xstream.core.util.Primitives:
    java.util.Map BOX -> BOX
    java.util.Map UNBOX -> UNBOX
    java.util.Map NAMED_PRIMITIVE -> NAMED_PRIMITIVE
    java.util.Map REPRESENTING_CHAR -> REPRESENTING_CHAR
    void <init>() -> <init>
    java.lang.Class box(java.lang.Class) -> box
    java.lang.Class unbox(java.lang.Class) -> unbox
    boolean isBoxed(java.lang.Class) -> isBoxed
    java.lang.Class primitiveType(java.lang.String) -> primitiveType
    char representingChar(java.lang.Class) -> representingChar
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.core.util.PrioritizedList -> com.thoughtworks.xstream.core.util.PrioritizedList:
    java.util.Set set -> set
    int lowestPriority -> lowestPriority
    int lastId -> lastId
    void <init>() -> <init>
    void add(java.lang.Object,int) -> add
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem -> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem:
    java.lang.Object value -> value
    int priority -> priority
    int id -> id
    void <init>(java.lang.Object,int,int) -> <init>
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator -> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:
    java.util.Iterator iterator -> iterator
    void <init>(java.util.Iterator) -> <init>
    void remove() -> remove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.thoughtworks.xstream.core.util.QuickWriter -> com.thoughtworks.xstream.core.util.QuickWriter:
    java.io.Writer writer -> writer
    char[] buffer -> buffer
    int pointer -> pointer
    void <init>(java.io.Writer) -> <init>
    void <init>(java.io.Writer,int) -> <init>
    void write(java.lang.String) -> write
    void write(char) -> write
    void write(char[]) -> write
    void flush() -> flush
    void close() -> close
    void raw(char[]) -> raw
    void raw(char) -> raw
com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker -> com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:
    java.lang.Object self -> self
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    void <init>(com.thoughtworks.xstream.converters.ConverterLookup,java.lang.Object) -> <init>
    void <init>(com.thoughtworks.xstream.converters.Converter,java.lang.Object) -> <init>
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    com.thoughtworks.xstream.converters.Converter getConverter() -> getConverter
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor -> com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:
    java.lang.Class editorType -> editorType
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    void <init>(java.lang.Class,int,int) -> <init>
    java.lang.String getAsText(java.lang.Object) -> getAsText
    java.lang.Object setAsText(java.lang.String) -> setAsText
    java.beans.PropertyEditor fetchFromPool() -> fetchFromPool
    java.lang.Class access$000(com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor) -> access$000
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1 -> com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor) -> <init>
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat -> com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:
    java.lang.String formatString -> formatString
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    java.util.TimeZone timeZone -> timeZone
    void <init>(java.lang.String,java.util.TimeZone,int,int,boolean) -> <init>
    void <init>(java.lang.String,java.util.TimeZone,java.util.Locale,int,int,boolean) -> <init>
    java.lang.String format(java.util.Date) -> format
    java.util.Date parse(java.lang.String) -> parse
    java.text.DateFormat fetchFromPool() -> fetchFromPool
    java.lang.String toString() -> toString
    java.lang.String access$000(com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat) -> access$000
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat$1 -> com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat$1:
    java.util.Locale val$locale -> val$locale
    boolean val$lenient -> val$lenient
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat,java.util.Locale,boolean) -> <init>
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.TypedNull -> com.thoughtworks.xstream.core.util.TypedNull:
    java.lang.Class type -> type
    void <init>(java.lang.Class) -> <init>
    java.lang.Class getType() -> getType
com.thoughtworks.xstream.core.util.WeakCache -> com.thoughtworks.xstream.core.util.WeakCache:
    java.util.Map map -> map
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int) -> iterate
    boolean containsKey(java.lang.Object) -> containsKey
    void clear() -> clear
    java.util.Set keySet() -> keySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.WeakCache$1 -> com.thoughtworks.xstream.core.util.WeakCache$1:
    java.lang.Object val$value -> val$value
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.WeakCache,java.lang.Object) -> <init>
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$2 -> com.thoughtworks.xstream.core.util.WeakCache$2:
    int[] val$i -> val$i
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.WeakCache,int[]) -> <init>
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$3 -> com.thoughtworks.xstream.core.util.WeakCache$3:
    java.util.Collection val$collection -> val$collection
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.WeakCache,java.util.Collection) -> <init>
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$4 -> com.thoughtworks.xstream.core.util.WeakCache$4:
    java.util.Set val$set -> val$set
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    void <init>(com.thoughtworks.xstream.core.util.WeakCache,java.util.Set) -> <init>
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$4$1 -> com.thoughtworks.xstream.core.util.WeakCache$4$1:
    java.util.Map$Entry val$entry -> val$entry
    com.thoughtworks.xstream.core.util.WeakCache$4 this$1 -> this$1
    void <init>(com.thoughtworks.xstream.core.util.WeakCache$4,java.util.Map$Entry) -> <init>
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.thoughtworks.xstream.core.util.WeakCache$Visitor -> com.thoughtworks.xstream.core.util.WeakCache$Visitor:
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.XmlHeaderAwareReader -> com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:
    java.io.InputStreamReader reader -> reader
    double version -> version
    java.lang.String KEY_ENCODING -> KEY_ENCODING
    java.lang.String KEY_VERSION -> KEY_VERSION
    java.lang.String XML_TOKEN -> XML_TOKEN
    int STATE_BOM -> STATE_BOM
    int STATE_START -> STATE_START
    int STATE_AWAIT_XML_HEADER -> STATE_AWAIT_XML_HEADER
    int STATE_ATTR_NAME -> STATE_ATTR_NAME
    int STATE_ATTR_VALUE -> STATE_ATTR_VALUE
    void <init>(java.io.InputStream) -> <init>
    java.util.Map getHeader(java.io.PushbackInputStream[]) -> getHeader
    java.lang.String getEncoding() -> getEncoding
    double getVersion() -> getVersion
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(char[],int,int) -> read
    int read(char[]) -> read
    boolean ready() -> ready
    void reset() -> reset
    long skip(long) -> skip
    void close() -> close
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.io.AbstractDriver -> com.thoughtworks.xstream.io.AbstractDriver:
    com.thoughtworks.xstream.io.naming.NameCoder replacer -> replacer
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    com.thoughtworks.xstream.io.naming.NameCoder getNameCoder() -> getNameCoder
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
com.thoughtworks.xstream.io.AbstractReader -> com.thoughtworks.xstream.io.AbstractReader:
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.AbstractWriter -> com.thoughtworks.xstream.io.AbstractWriter:
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void startNode(java.lang.String,java.lang.Class) -> startNode
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
com.thoughtworks.xstream.io.AttributeNameIterator -> com.thoughtworks.xstream.io.AttributeNameIterator:
    int current -> current
    int count -> count
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamReader -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamReader:
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter:
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:
    void <init>() -> <init>
    void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.HierarchicalStreamDriver -> com.thoughtworks.xstream.io.HierarchicalStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.HierarchicalStreamReader -> com.thoughtworks.xstream.io.HierarchicalStreamReader:
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.HierarchicalStreamWriter -> com.thoughtworks.xstream.io.HierarchicalStreamWriter:
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.ReaderWrapper -> com.thoughtworks.xstream.io.ReaderWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped -> wrapped
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> <init>
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    java.lang.String peekNextChild() -> peekNextChild
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.StatefulWriter -> com.thoughtworks.xstream.io.StatefulWriter:
    int STATE_OPEN -> STATE_OPEN
    int STATE_NODE_START -> STATE_NODE_START
    int STATE_VALUE -> STATE_VALUE
    int STATE_NODE_END -> STATE_NODE_END
    int STATE_CLOSED -> STATE_CLOSED
    int state -> state
    int balance -> balance
    com.thoughtworks.xstream.core.util.FastStack attributes -> attributes
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> <init>
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void startNodeCommon() -> startNodeCommon
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void checkClosed() -> checkClosed
    int state() -> state
    java.lang.Object readResolve() -> readResolve
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.io.StreamException -> com.thoughtworks.xstream.io.StreamException:
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.thoughtworks.xstream.io.WriterWrapper -> com.thoughtworks.xstream.io.WriterWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped -> wrapped
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> <init>
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.binary.BinaryStreamDriver -> com.thoughtworks.xstream.io.binary.BinaryStreamDriver:
    void <init>() -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.binary.BinaryStreamReader -> com.thoughtworks.xstream.io.binary.BinaryStreamReader:
    java.io.DataInputStream in -> in
    com.thoughtworks.xstream.io.binary.ReaderDepthState depthState -> depthState
    com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry -> idRegistry
    com.thoughtworks.xstream.io.binary.Token pushback -> pushback
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    void <init>(java.io.InputStream) -> <init>
    boolean hasMoreChildren() -> hasMoreChildren
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    com.thoughtworks.xstream.io.binary.Token readToken() -> readToken
    void pushBack(com.thoughtworks.xstream.io.binary.Token) -> pushBack
    void close() -> close
    java.lang.String peekNextChild() -> peekNextChild
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.binary.BinaryStreamReader$1 -> com.thoughtworks.xstream.io.binary.BinaryStreamReader$1:
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry -> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:
    java.util.Map map -> map
    void <init>() -> <init>
    void put(long,java.lang.String) -> put
    java.lang.String get(long) -> get
    void <init>(com.thoughtworks.xstream.io.binary.BinaryStreamReader$1) -> <init>
com.thoughtworks.xstream.io.binary.BinaryStreamWriter -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter:
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry idRegistry -> idRegistry
    java.io.DataOutputStream out -> out
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    void <init>(java.io.OutputStream) -> <init>
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    void write(com.thoughtworks.xstream.io.binary.Token) -> write
    void access$100(com.thoughtworks.xstream.io.binary.BinaryStreamWriter,com.thoughtworks.xstream.io.binary.Token) -> access$100
com.thoughtworks.xstream.io.binary.BinaryStreamWriter$1 -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter$1:
com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:
    long nextId -> nextId
    java.util.Map ids -> ids
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter this$0 -> this$0
    void <init>(com.thoughtworks.xstream.io.binary.BinaryStreamWriter) -> <init>
    long getId(java.lang.String) -> getId
    void <init>(com.thoughtworks.xstream.io.binary.BinaryStreamWriter,com.thoughtworks.xstream.io.binary.BinaryStreamWriter$1) -> <init>
com.thoughtworks.xstream.io.binary.ReaderDepthState -> com.thoughtworks.xstream.io.binary.ReaderDepthState:
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State current -> current
    void <init>() -> <init>
    void push() -> push
    void pop() -> pop
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    boolean hasMoreChildren() -> hasMoreChildren
    void setHasMoreChildren(boolean) -> setHasMoreChildren
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    java.lang.String getAttributeName(int) -> getAttributeName
    int getAttributeCount() -> getAttributeCount
    java.util.Iterator getAttributeNames() -> getAttributeNames
com.thoughtworks.xstream.io.binary.ReaderDepthState$1 -> com.thoughtworks.xstream.io.binary.ReaderDepthState$1:
    java.util.Iterator val$attributeIterator -> val$attributeIterator
    com.thoughtworks.xstream.io.binary.ReaderDepthState this$0 -> this$0
    void <init>(com.thoughtworks.xstream.io.binary.ReaderDepthState,java.util.Iterator) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.binary.ReaderDepthState$Attribute -> com.thoughtworks.xstream.io.binary.ReaderDepthState$Attribute:
    java.lang.String name -> name
    java.lang.String value -> value
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.binary.ReaderDepthState$1) -> <init>
com.thoughtworks.xstream.io.binary.ReaderDepthState$State -> com.thoughtworks.xstream.io.binary.ReaderDepthState$State:
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.List attributes -> attributes
    boolean hasMoreChildren -> hasMoreChildren
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State parent -> parent
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.binary.ReaderDepthState$1) -> <init>
com.thoughtworks.xstream.io.binary.Token -> com.thoughtworks.xstream.io.binary.Token:
    byte TYPE_MASK -> TYPE_MASK
    byte TYPE_VERSION -> TYPE_VERSION
    byte TYPE_MAP_ID_TO_VALUE -> TYPE_MAP_ID_TO_VALUE
    byte TYPE_START_NODE -> TYPE_START_NODE
    byte TYPE_END_NODE -> TYPE_END_NODE
    byte TYPE_ATTRIBUTE -> TYPE_ATTRIBUTE
    byte TYPE_VALUE -> TYPE_VALUE
    byte ID_MASK -> ID_MASK
    byte ID_ONE_BYTE -> ID_ONE_BYTE
    byte ID_TWO_BYTES -> ID_TWO_BYTES
    byte ID_FOUR_BYTES -> ID_FOUR_BYTES
    byte ID_EIGHT_BYTES -> ID_EIGHT_BYTES
    java.lang.String ID_SPLITTED -> ID_SPLITTED
    int MAX_UTF8_LENGTH -> MAX_UTF8_LENGTH
    byte type -> type
    long id -> id
    java.lang.String value -> value
    void <init>(byte) -> <init>
    byte getType() -> getType
    long getId() -> getId
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
    void writeId(java.io.DataOutput,long,byte) -> writeId
    void writeString(java.io.DataOutput,java.lang.String) -> writeString
    long readId(java.io.DataInput,byte) -> readId
    java.lang.String readString(java.io.DataInput) -> readString
com.thoughtworks.xstream.io.binary.Token$Attribute -> com.thoughtworks.xstream.io.binary.Token$Attribute:
    void <init>(long,java.lang.String) -> <init>
    void <init>() -> <init>
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$EndNode -> com.thoughtworks.xstream.io.binary.Token$EndNode:
    void <init>() -> <init>
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Formatter -> com.thoughtworks.xstream.io.binary.Token$Formatter:
    void <init>() -> <init>
    void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token) -> write
    com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput) -> read
    com.thoughtworks.xstream.io.binary.Token contructToken(byte) -> contructToken
com.thoughtworks.xstream.io.binary.Token$MapIdToValue -> com.thoughtworks.xstream.io.binary.Token$MapIdToValue:
    void <init>(long,java.lang.String) -> <init>
    void <init>() -> <init>
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$StartNode -> com.thoughtworks.xstream.io.binary.Token$StartNode:
    void <init>(long) -> <init>
    void <init>() -> <init>
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Value -> com.thoughtworks.xstream.io.binary.Token$Value:
    void <init>(java.lang.String) -> <init>
    void <init>() -> <init>
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier -> com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:
    void <init>() -> <init>
    void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> copy
com.thoughtworks.xstream.io.json.AbstractJsonWriter -> com.thoughtworks.xstream.io.json.AbstractJsonWriter:
    int DROP_ROOT_MODE -> DROP_ROOT_MODE
    int STRICT_MODE -> STRICT_MODE
    int EXPLICIT_MODE -> EXPLICIT_MODE
    int IEEE_754_MODE -> IEEE_754_MODE
    int STATE_ROOT -> STATE_ROOT
    int STATE_END_OBJECT -> STATE_END_OBJECT
    int STATE_START_OBJECT -> STATE_START_OBJECT
    int STATE_START_ATTRIBUTES -> STATE_START_ATTRIBUTES
    int STATE_NEXT_ATTRIBUTE -> STATE_NEXT_ATTRIBUTE
    int STATE_END_ATTRIBUTES -> STATE_END_ATTRIBUTES
    int STATE_START_ELEMENTS -> STATE_START_ELEMENTS
    int STATE_NEXT_ELEMENT -> STATE_NEXT_ELEMENT
    int STATE_END_ELEMENTS -> STATE_END_ELEMENTS
    int STATE_SET_VALUE -> STATE_SET_VALUE
    java.util.Set NUMBER_TYPES -> NUMBER_TYPES
    int mode -> mode
    com.thoughtworks.xstream.core.util.FastStack stack -> stack
    int expectedStates -> expectedStates
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(int,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void handleCheckedStateTransition(int,java.lang.String,java.lang.String) -> handleCheckedStateTransition
    int handleStateTransition(int,int,java.lang.String,java.lang.String) -> handleStateTransition
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type getType(java.lang.Class) -> getType
    boolean isArray(java.lang.Class) -> isArray
    void startObject() -> startObject
    void addLabel(java.lang.String) -> addLabel
    void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type) -> addValue
    void startArray() -> startArray
    void nextElement() -> nextElement
    void endArray() -> endArray
    void endObject() -> endObject
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.io.json.AbstractJsonWriter$IllegalWriterStateException -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$IllegalWriterStateException:
    void <init>(int,int,java.lang.String) -> <init>
    java.lang.String getState(int) -> getState
com.thoughtworks.xstream.io.json.AbstractJsonWriter$StackElement -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$StackElement:
    java.lang.Class type -> type
    int status -> status
    void <init>(java.lang.Class,int) -> <init>
com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type:
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type NULL -> NULL
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type STRING -> STRING
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type NUMBER -> NUMBER
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type BOOLEAN -> BOOLEAN
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver -> com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:
    org.codehaus.jettison.mapped.MappedXMLOutputFactory mof -> mof
    org.codehaus.jettison.mapped.MappedXMLInputFactory mif -> mif
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    boolean useSerializeAsArray -> useSerializeAsArray
    void <init>() -> <init>
    void <init>(org.codehaus.jettison.mapped.Configuration) -> <init>
    void <init>(org.codehaus.jettison.mapped.Configuration,boolean) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JettisonStaxWriter -> com.thoughtworks.xstream.io.json.JettisonStaxWriter:
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.naming.NameCoder,org.codehaus.jettison.mapped.MappedNamespaceConvention) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer,org.codehaus.jettison.mapped.MappedNamespaceConvention) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,org.codehaus.jettison.mapped.MappedNamespaceConvention) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,org.codehaus.jettison.mapped.MappedNamespaceConvention) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,com.thoughtworks.xstream.io.naming.NameCoder,org.codehaus.jettison.mapped.MappedNamespaceConvention) -> <init>
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:
    void <init>(java.io.Writer,char[],java.lang.String) -> <init>
    void <init>(java.io.Writer,char[]) -> <init>
    void <init>(java.io.Writer,java.lang.String,java.lang.String) -> <init>
    void <init>(java.io.Writer,java.lang.String) -> <init>
    void <init>(java.io.Writer) -> <init>
com.thoughtworks.xstream.io.json.JsonWriter -> com.thoughtworks.xstream.io.json.JsonWriter:
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.io.json.JsonWriter$Format format -> format
    int depth -> depth
    boolean newLineProposed -> newLineProposed
    void <init>(java.io.Writer,char[],java.lang.String) -> <init>
    void <init>(java.io.Writer,char[]) -> <init>
    void <init>(java.io.Writer,java.lang.String,java.lang.String) -> <init>
    void <init>(java.io.Writer,java.lang.String) -> <init>
    void <init>(java.io.Writer) -> <init>
    void <init>(java.io.Writer,char[],java.lang.String,int) -> <init>
    void <init>(java.io.Writer,int) -> <init>
    void <init>(java.io.Writer,com.thoughtworks.xstream.io.json.JsonWriter$Format) -> <init>
    void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.json.JsonWriter$Format) -> <init>
    void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.json.JsonWriter$Format,int) -> <init>
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    void startObject() -> startObject
    void addLabel(java.lang.String) -> addLabel
    void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type) -> addValue
    void startArray() -> startArray
    void nextElement() -> nextElement
    void endArray() -> endArray
    void endObject() -> endObject
    void startNewLine() -> startNewLine
    void endNewLine() -> endNewLine
    void writeNewLine() -> writeNewLine
    void writeText(java.lang.String) -> writeText
com.thoughtworks.xstream.io.json.JsonWriter$Format -> com.thoughtworks.xstream.io.json.JsonWriter$Format:
    int SPACE_AFTER_LABEL -> SPACE_AFTER_LABEL
    int COMPACT_EMPTY_ELEMENT -> COMPACT_EMPTY_ELEMENT
    char[] lineIndenter -> lineIndenter
    char[] newLine -> newLine
    int mode -> mode
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    void <init>() -> <init>
    void <init>(char[],char[],int) -> <init>
    void <init>(char[],char[],int,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    char[] getLineIndenter() -> getLineIndenter
    char[] getNewLine() -> getNewLine
    int mode() -> mode
    com.thoughtworks.xstream.io.naming.NameCoder getNameCoder() -> getNameCoder
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.io.naming.NameCoder -> com.thoughtworks.xstream.io.naming.NameCoder:
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
com.thoughtworks.xstream.io.naming.NameCoderWrapper -> com.thoughtworks.xstream.io.naming.NameCoderWrapper:
    com.thoughtworks.xstream.io.naming.NameCoder wrapped -> wrapped
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
com.thoughtworks.xstream.io.naming.NoNameCoder -> com.thoughtworks.xstream.io.naming.NoNameCoder:
    void <init>() -> <init>
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
com.thoughtworks.xstream.io.naming.StaticNameCoder -> com.thoughtworks.xstream.io.naming.StaticNameCoder:
    java.util.Map java2Node -> java2Node
    java.util.Map java2Attribute -> java2Attribute
    java.util.Map node2Java -> node2Java
    java.util.Map attribute2Java -> attribute2Java
    void <init>(java.util.Map,java.util.Map) -> <init>
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.Object readResolve() -> readResolve
    java.util.Map invertMap(java.util.Map) -> invertMap
com.thoughtworks.xstream.io.path.Path -> com.thoughtworks.xstream.io.path.Path:
    java.lang.String[] chunks -> chunks
    java.lang.String pathAsString -> pathAsString
    java.lang.String pathExplicit -> pathExplicit
    com.thoughtworks.xstream.io.path.Path DOT -> DOT
    void <init>(java.lang.String) -> <init>
    java.lang.String normalize(java.lang.String,int,int) -> normalize
    void <init>(java.lang.String[]) -> <init>
    java.lang.String toString() -> toString
    java.lang.String explicit() -> explicit
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.thoughtworks.xstream.io.path.Path relativeTo(com.thoughtworks.xstream.io.path.Path) -> relativeTo
    int depthOfPathDivergence(java.lang.String[],java.lang.String[]) -> depthOfPathDivergence
    com.thoughtworks.xstream.io.path.Path apply(com.thoughtworks.xstream.io.path.Path) -> apply
    boolean isAncestor(com.thoughtworks.xstream.io.path.Path) -> isAncestor
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.io.path.PathTracker -> com.thoughtworks.xstream.io.path.PathTracker:
    int pointer -> pointer
    int capacity -> capacity
    java.lang.String[] pathStack -> pathStack
    java.util.Map[] indexMapStack -> indexMapStack
    com.thoughtworks.xstream.io.path.Path currentPath -> currentPath
    void <init>() -> <init>
    void <init>(int) -> <init>
    void pushElement(java.lang.String) -> pushElement
    void popElement() -> popElement
    java.lang.String peekElement() -> peekElement
    java.lang.String peekElement(int) -> peekElement
    int depth() -> depth
    void resizeStacks(int) -> resizeStacks
    com.thoughtworks.xstream.io.path.Path getPath() -> getPath
com.thoughtworks.xstream.io.path.PathTrackingReader -> com.thoughtworks.xstream.io.path.PathTrackingReader:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.path.PathTracker) -> <init>
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.path.PathTrackingWriter -> com.thoughtworks.xstream.io.path.PathTrackingWriter:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isNameEncoding -> isNameEncoding
    void <init>(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.io.path.PathTracker) -> <init>
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
com.thoughtworks.xstream.io.xml.AbstractDocumentReader -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader:
    com.thoughtworks.xstream.core.util.FastStack pointers -> pointers
    java.lang.Object current -> current
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    boolean hasMoreChildren() -> hasMoreChildren
    void moveUp() -> moveUp
    void moveDown() -> moveDown
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    java.lang.Object getCurrent() -> getCurrent
    void close() -> close
com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1 -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1:
com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer:
    int v -> v
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1) -> <init>
com.thoughtworks.xstream.io.xml.AbstractDocumentWriter -> com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:
    java.util.List result -> result
    com.thoughtworks.xstream.core.util.FastStack nodeStack -> nodeStack
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.lang.Object,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void startNode(java.lang.String) -> startNode
    java.lang.Object createNode(java.lang.String) -> createNode
    void endNode() -> endNode
    void endNodeInternally() -> endNodeInternally
    java.lang.Object getCurrent() -> getCurrent
    java.util.List getTopLevelNodes() -> getTopLevelNodes
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.AbstractPullReader -> com.thoughtworks.xstream.io.xml.AbstractPullReader:
    int START_NODE -> START_NODE
    int END_NODE -> END_NODE
    int TEXT -> TEXT
    int COMMENT -> COMMENT
    int OTHER -> OTHER
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    com.thoughtworks.xstream.core.util.FastStack pool -> pool
    com.thoughtworks.xstream.core.util.FastStack lookahead -> lookahead
    com.thoughtworks.xstream.core.util.FastStack lookback -> lookback
    boolean marked -> marked
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void move() -> move
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent() -> readEvent
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent() -> readRealEvent
    void mark() -> mark
    void reset() -> reset
    java.lang.String getValue() -> getValue
    java.util.Iterator getAttributeNames() -> getAttributeNames
    java.lang.String getNodeName() -> getNodeName
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.AbstractPullReader$1 -> com.thoughtworks.xstream.io.xml.AbstractPullReader$1:
com.thoughtworks.xstream.io.xml.AbstractPullReader$Event -> com.thoughtworks.xstream.io.xml.AbstractPullReader$Event:
    int type -> type
    java.lang.String value -> value
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.AbstractPullReader$1) -> <init>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver -> com.thoughtworks.xstream.io.xml.AbstractXmlDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer() -> xmlFriendlyReplacer
com.thoughtworks.xstream.io.xml.AbstractXmlReader -> com.thoughtworks.xstream.io.xml.AbstractXmlReader:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.AbstractXmlWriter -> com.thoughtworks.xstream.io.xml.AbstractXmlWriter:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.AbstractXppDomDriver -> com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.AbstractXppDriver -> com.thoughtworks.xstream.io.xml.AbstractXppDriver:
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.BEAStaxDriver -> com.thoughtworks.xstream.io.xml.BEAStaxDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.CompactWriter -> com.thoughtworks.xstream.io.xml.CompactWriter:
    void <init>(java.io.Writer) -> <init>
    void <init>(java.io.Writer,int) -> <init>
    void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void endOfLine() -> endOfLine
com.thoughtworks.xstream.io.xml.DocumentReader -> com.thoughtworks.xstream.io.xml.DocumentReader:
    java.lang.Object getCurrent() -> getCurrent
com.thoughtworks.xstream.io.xml.DocumentWriter -> com.thoughtworks.xstream.io.xml.DocumentWriter:
    java.util.List getTopLevelNodes() -> getTopLevelNodes
com.thoughtworks.xstream.io.xml.Dom4JDriver -> com.thoughtworks.xstream.io.xml.Dom4JDriver:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    org.dom4j.io.OutputFormat outputFormat -> outputFormat
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.DocumentFactory,org.dom4j.io.OutputFormat) -> <init>
    void <init>(org.dom4j.DocumentFactory,org.dom4j.io.OutputFormat,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.DocumentFactory,org.dom4j.io.OutputFormat,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.io.OutputFormat getOutputFormat() -> getOutputFormat
    void setOutputFormat(org.dom4j.io.OutputFormat) -> setOutputFormat
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.Dom4JDriver$1 -> com.thoughtworks.xstream.io.xml.Dom4JDriver$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter[] val$writer -> val$writer
    com.thoughtworks.xstream.io.xml.Dom4JDriver this$0 -> this$0
    void <init>(com.thoughtworks.xstream.io.xml.Dom4JDriver,java.io.Writer,com.thoughtworks.xstream.io.HierarchicalStreamWriter[]) -> <init>
    void close() -> close
com.thoughtworks.xstream.io.xml.Dom4JReader -> com.thoughtworks.xstream.io.xml.Dom4JReader:
    org.dom4j.Element currentElement -> currentElement
    void <init>(org.dom4j.Element) -> <init>
    void <init>(org.dom4j.Document) -> <init>
    void <init>(org.dom4j.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.Document,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.dom4j.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.xml.Dom4JWriter -> com.thoughtworks.xstream.io.xml.Dom4JWriter:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    void <init>(org.dom4j.Branch,org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.Branch,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.Branch,org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.dom4j.DocumentFactory) -> <init>
    void <init>(org.dom4j.Branch,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.dom4j.Branch) -> <init>
    void <init>() -> <init>
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.dom4j.Branch top() -> top
com.thoughtworks.xstream.io.xml.Dom4JXmlWriter -> com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:
    org.dom4j.io.XMLWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    org.xml.sax.helpers.AttributesImpl attributes -> attributes
    boolean started -> started
    boolean children -> children
    void <init>(org.dom4j.io.XMLWriter) -> <init>
    void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void startNode(java.lang.String) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void startElement() -> startElement
com.thoughtworks.xstream.io.xml.DomDriver -> com.thoughtworks.xstream.io.xml.DomDriver:
    java.lang.String encoding -> encoding
    javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory -> documentBuilderFactory
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.lang.String,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(org.xml.sax.InputSource) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.DomReader -> com.thoughtworks.xstream.io.xml.DomReader:
    org.w3c.dom.Element currentElement -> currentElement
    java.lang.StringBuffer textBuffer -> textBuffer
    java.util.List childElements -> childElements
    void <init>(org.w3c.dom.Element) -> <init>
    void <init>(org.w3c.dom.Document) -> <init>
    void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.DomWriter -> com.thoughtworks.xstream.io.xml.DomWriter:
    org.w3c.dom.Document document -> document
    boolean hasRootElement -> hasRootElement
    void <init>(org.w3c.dom.Document) -> <init>
    void <init>(org.w3c.dom.Element) -> <init>
    void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.w3c.dom.Element,org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.w3c.dom.Element,org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    org.w3c.dom.Element top() -> top
com.thoughtworks.xstream.io.xml.JDom2Driver -> com.thoughtworks.xstream.io.xml.JDom2Driver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.JDom2Reader -> com.thoughtworks.xstream.io.xml.JDom2Reader:
    org.jdom2.Element currentElement -> currentElement
    void <init>(org.jdom2.Element) -> <init>
    void <init>(org.jdom2.Document) -> <init>
    void <init>(org.jdom2.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom2.Document,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.JDom2Writer -> com.thoughtworks.xstream.io.xml.JDom2Writer:
    org.jdom2.JDOMFactory documentFactory -> documentFactory
    void <init>(org.jdom2.Element,org.jdom2.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom2.Element,org.jdom2.JDOMFactory) -> <init>
    void <init>(org.jdom2.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom2.JDOMFactory) -> <init>
    void <init>(org.jdom2.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom2.Element) -> <init>
    void <init>() -> <init>
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.jdom2.Element top() -> top
com.thoughtworks.xstream.io.xml.JDomDriver -> com.thoughtworks.xstream.io.xml.JDomDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.JDomReader -> com.thoughtworks.xstream.io.xml.JDomReader:
    org.jdom.Element currentElement -> currentElement
    void <init>(org.jdom.Element) -> <init>
    void <init>(org.jdom.Document) -> <init>
    void <init>(org.jdom.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom.Document,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.jdom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.JDomWriter -> com.thoughtworks.xstream.io.xml.JDomWriter:
    org.jdom.JDOMFactory documentFactory -> documentFactory
    void <init>(org.jdom.Element,org.jdom.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom.Element,org.jdom.JDOMFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.jdom.Element,org.jdom.JDOMFactory) -> <init>
    void <init>(org.jdom.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom.JDOMFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.jdom.JDOMFactory) -> <init>
    void <init>(org.jdom.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(org.jdom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(org.jdom.Element) -> <init>
    void <init>() -> <init>
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.jdom.Element top() -> top
com.thoughtworks.xstream.io.xml.KXml2DomDriver -> com.thoughtworks.xstream.io.xml.KXml2DomDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.KXml2Driver -> com.thoughtworks.xstream.io.xml.KXml2Driver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.PrettyPrintWriter -> com.thoughtworks.xstream.io.xml.PrettyPrintWriter:
    int XML_QUIRKS -> XML_QUIRKS
    int XML_1_0 -> XML_1_0
    int XML_1_1 -> XML_1_1
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    char[] lineIndenter -> lineIndenter
    int mode -> mode
    boolean tagInProgress -> tagInProgress
    int depth -> depth
    boolean readyForNewLine -> readyForNewLine
    boolean tagIsEmpty -> tagIsEmpty
    java.lang.String newLine -> newLine
    char[] NULL -> NULL
    char[] AMP -> AMP
    char[] LT -> LT
    char[] GT -> GT
    char[] CR -> CR
    char[] QUOT -> QUOT
    char[] APOS -> APOS
    char[] CLOSE -> CLOSE
    void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.naming.NameCoder,java.lang.String) -> <init>
    void <init>(java.io.Writer,char[],java.lang.String,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(java.io.Writer,char[],java.lang.String) -> <init>
    void <init>(java.io.Writer,int,char[]) -> <init>
    void <init>(java.io.Writer,char[]) -> <init>
    void <init>(java.io.Writer,java.lang.String,java.lang.String) -> <init>
    void <init>(java.io.Writer,int,java.lang.String) -> <init>
    void <init>(java.io.Writer,java.lang.String) -> <init>
    void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(java.io.Writer,int) -> <init>
    void <init>(java.io.Writer) -> <init>
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeAttributeValue
    void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeText
    void writeText(java.lang.String,boolean) -> writeText
    void endNode() -> endNode
    void finishTag() -> finishTag
    void endOfLine() -> endOfLine
    void flush() -> flush
    void close() -> close
    java.lang.String getNewLine() -> getNewLine
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.io.xml.QNameMap -> com.thoughtworks.xstream.io.xml.QNameMap:
    java.util.Map qnameToJava -> qnameToJava
    java.util.Map javaToQName -> javaToQName
    java.lang.String defaultPrefix -> defaultPrefix
    java.lang.String defaultNamespace -> defaultNamespace
    void <init>() -> <init>
    java.lang.String getJavaClassName(javax.xml.namespace.QName) -> getJavaClassName
    javax.xml.namespace.QName getQName(java.lang.String) -> getQName
    void registerMapping(javax.xml.namespace.QName,java.lang.String) -> registerMapping
    void registerMapping(javax.xml.namespace.QName,java.lang.Class) -> registerMapping
    java.lang.String getDefaultNamespace() -> getDefaultNamespace
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    java.lang.String getDefaultPrefix() -> getDefaultPrefix
    void setDefaultPrefix(java.lang.String) -> setDefaultPrefix
com.thoughtworks.xstream.io.xml.SaxWriter -> com.thoughtworks.xstream.io.xml.SaxWriter:
    java.lang.String CONFIGURED_XSTREAM_PROPERTY -> CONFIGURED_XSTREAM_PROPERTY
    java.lang.String SOURCE_OBJECT_LIST_PROPERTY -> SOURCE_OBJECT_LIST_PROPERTY
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.DTDHandler dtdHandler -> dtdHandler
    org.xml.sax.ContentHandler contentHandler -> contentHandler
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    java.util.Map features -> features
    java.util.Map properties -> properties
    boolean includeEnclosingDocument -> includeEnclosingDocument
    int depth -> depth
    java.util.List elementStack -> elementStack
    char[] buffer -> buffer
    boolean startTagInProgress -> startTagInProgress
    org.xml.sax.helpers.AttributesImpl attributeList -> attributeList
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(boolean,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(boolean) -> <init>
    void <init>() -> <init>
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void parse(java.lang.String) -> parse
    void parse(org.xml.sax.InputSource) -> parse
    void parse() -> parse
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void startDocument(boolean) -> startDocument
    void endDocument(boolean) -> endDocument
    void flushStartTag() -> flushStartTag
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.SjsxpDriver -> com.thoughtworks.xstream.io.xml.SjsxpDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StandardStaxDriver -> com.thoughtworks.xstream.io.xml.StandardStaxDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StaxDriver -> com.thoughtworks.xstream.io.xml.StaxDriver:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLInputFactory inputFactory -> inputFactory
    javax.xml.stream.XMLOutputFactory outputFactory -> outputFactory
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    com.thoughtworks.xstream.io.xml.AbstractPullReader createStaxReader(javax.xml.stream.XMLStreamReader) -> createStaxReader
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.QNameMap getQnameMap() -> getQnameMap
    void setQnameMap(com.thoughtworks.xstream.io.xml.QNameMap) -> setQnameMap
    javax.xml.stream.XMLInputFactory getInputFactory() -> getInputFactory
    javax.xml.stream.XMLOutputFactory getOutputFactory() -> getOutputFactory
    boolean isRepairingNamespace() -> isRepairingNamespace
    void setRepairingNamespace(boolean) -> setRepairingNamespace
    javax.xml.stream.XMLStreamReader createParser(java.io.Reader) -> createParser
    javax.xml.stream.XMLStreamReader createParser(java.io.InputStream) -> createParser
    javax.xml.stream.XMLStreamReader createParser(javax.xml.transform.Source) -> createParser
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StaxDriver$1 -> com.thoughtworks.xstream.io.xml.StaxDriver$1:
    java.io.InputStream val$stream -> val$stream
    com.thoughtworks.xstream.io.xml.StaxDriver this$0 -> this$0
    void <init>(com.thoughtworks.xstream.io.xml.StaxDriver,com.thoughtworks.xstream.io.HierarchicalStreamReader,java.io.InputStream) -> <init>
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxDriver$2 -> com.thoughtworks.xstream.io.xml.StaxDriver$2:
    java.io.InputStream val$stream -> val$stream
    com.thoughtworks.xstream.io.xml.StaxDriver this$0 -> this$0
    void <init>(com.thoughtworks.xstream.io.xml.StaxDriver,com.thoughtworks.xstream.io.HierarchicalStreamReader,java.io.InputStream) -> <init>
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxReader -> com.thoughtworks.xstream.io.xml.StaxReader:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamReader in -> in
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxWriter -> com.thoughtworks.xstream.io.xml.StaxWriter:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamWriter out -> out
    boolean writeEnclosingDocument -> writeEnclosingDocument
    boolean namespaceRepairingMode -> namespaceRepairingMode
    int tagDepth -> tagDepth
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void flush() -> flush
    void close() -> close
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void setValue(java.lang.String) -> setValue
    void startNode(java.lang.String) -> startNode
    boolean isNamespaceRepairingMode() -> isNamespaceRepairingMode
    com.thoughtworks.xstream.io.xml.QNameMap getQNameMap() -> getQNameMap
    javax.xml.stream.XMLStreamWriter getXMLStreamWriter() -> getXMLStreamWriter
com.thoughtworks.xstream.io.xml.TraxSource -> com.thoughtworks.xstream.io.xml.TraxSource:
    java.lang.String XSTREAM_FEATURE -> XSTREAM_FEATURE
    org.xml.sax.XMLReader xmlReader -> xmlReader
    com.thoughtworks.xstream.XStream xstream -> xstream
    java.util.List source -> source
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,com.thoughtworks.xstream.XStream) -> <init>
    void <init>(java.util.List) -> <init>
    void <init>(java.util.List,com.thoughtworks.xstream.XStream) -> <init>
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setXStream(com.thoughtworks.xstream.XStream) -> setXStream
    void setSource(java.lang.Object) -> setSource
    void setSourceAsList(java.util.List) -> setSourceAsList
    void createXMLReader(org.xml.sax.XMLReader) -> createXMLReader
    void configureXMLReader() -> configureXMLReader
com.thoughtworks.xstream.io.xml.WstxDriver -> com.thoughtworks.xstream.io.xml.WstxDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.QNameMap) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.XStream11NameCoder -> com.thoughtworks.xstream.io.xml.XStream11NameCoder:
    void <init>() -> <init>
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer:
    void <init>() -> <init>
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String unescapeName(java.lang.String) -> unescapeName
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:
    com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[] XML_NAME_START_CHAR_BOUNDS -> XML_NAME_START_CHAR_BOUNDS
    com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[] XML_NAME_CHAR_EXTRA_BOUNDS -> XML_NAME_CHAR_EXTRA_BOUNDS
    java.lang.String dollarReplacement -> dollarReplacement
    java.lang.String escapeCharReplacement -> escapeCharReplacement
    java.util.Map escapeCache -> escapeCache
    java.util.Map unescapeCache -> unescapeCache
    java.lang.String hexPrefix -> hexPrefix
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeName(java.lang.String) -> encodeName
    java.lang.String decodeName(java.lang.String) -> decodeName
    java.lang.Object clone() -> clone
    java.lang.Object readResolve() -> readResolve
    java.util.Map createCacheMap() -> createCacheMap
    boolean isXmlNameStartChar(int) -> isXmlNameStartChar
    boolean isXmlNameChar(int) -> isXmlNameChar
    boolean isInNameCharBounds(int,com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[]) -> isInNameCharBounds
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$1IntPairList -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$1IntPairList:
    void <init>() -> <init>
    void add(int,int) -> add
    void add(char) -> add
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair:
    int min -> min
    int max -> max
    void <init>(int,int) -> <init>
com.thoughtworks.xstream.io.xml.XmlFriendlyReader -> com.thoughtworks.xstream.io.xml.XmlFriendlyReader:
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String escapeName(java.lang.String) -> escapeName
    java.lang.String unescapeName(java.lang.String) -> unescapeName
com.thoughtworks.xstream.io.xml.XmlFriendlyWriter -> com.thoughtworks.xstream.io.xml.XmlFriendlyWriter:
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.XomDriver -> com.thoughtworks.xstream.io.xml.XomDriver:
    nu.xom.Builder builder -> builder
    void <init>() -> <init>
    void <init>(nu.xom.Builder) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(nu.xom.Builder,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(nu.xom.Builder,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    nu.xom.Builder getBuilder() -> getBuilder
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.XomReader -> com.thoughtworks.xstream.io.xml.XomReader:
    nu.xom.Element currentElement -> currentElement
    void <init>(nu.xom.Element) -> <init>
    void <init>(nu.xom.Document) -> <init>
    void <init>(nu.xom.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(nu.xom.Document,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(nu.xom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(nu.xom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    int getChildCount() -> getChildCount
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.XomWriter -> com.thoughtworks.xstream.io.xml.XomWriter:
    void <init>() -> <init>
    void <init>(nu.xom.Element) -> <init>
    void <init>(nu.xom.Element,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(nu.xom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    nu.xom.Element top() -> top
com.thoughtworks.xstream.io.xml.Xpp3DomDriver -> com.thoughtworks.xstream.io.xml.Xpp3DomDriver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.Xpp3Driver -> com.thoughtworks.xstream.io.xml.Xpp3Driver:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppDomDriver -> com.thoughtworks.xstream.io.xml.XppDomDriver:
    org.xmlpull.v1.XmlPullParserFactory factory -> factory
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppDomReader -> com.thoughtworks.xstream.io.xml.XppDomReader:
    com.thoughtworks.xstream.io.xml.xppdom.XppDom currentElement -> currentElement
    void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.XppDomWriter -> com.thoughtworks.xstream.io.xml.XppDomWriter:
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getConfiguration() -> getConfiguration
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    com.thoughtworks.xstream.io.xml.xppdom.XppDom top() -> top
com.thoughtworks.xstream.io.xml.XppDriver -> com.thoughtworks.xstream.io.xml.XppDriver:
    org.xmlpull.v1.XmlPullParserFactory factory -> factory
    void <init>() -> <init>
    void <init>(com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppReader -> com.thoughtworks.xstream.io.xml.XppReader:
    org.xmlpull.v1.XmlPullParser parser -> parser
    java.io.Reader reader -> reader
    void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser) -> <init>
    void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser,com.thoughtworks.xstream.io.naming.NameCoder) -> <init>
    void <init>(java.io.Reader) -> <init>
    void <init>(java.io.Reader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer) -> <init>
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom:
    void <init>(java.lang.String) -> <init>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder:
    void <init>() -> <init>
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader) -> build
com.thoughtworks.xstream.io.xml.xppdom.XppDom -> com.thoughtworks.xstream.io.xml.xppdom.XppDom:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.Map attributes -> attributes
    java.util.List childList -> childList
    java.util.Map childMap -> childMap
    com.thoughtworks.xstream.io.xml.xppdom.XppDom parent -> parent
    void <init>(java.lang.String) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String[] getAttributeNames() -> getAttributeNames
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(int) -> getChild
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(java.lang.String) -> getChild
    void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> addChild
    com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren() -> getChildren
    com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren(java.lang.String) -> getChildren
    int getChildCount() -> getChildCount
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getParent() -> getParent
    void setParent(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> setParent
    java.lang.Object readResolve() -> readResolve
    com.thoughtworks.xstream.io.xml.xppdom.XppDom build(org.xmlpull.v1.XmlPullParser) -> build
com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator -> com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:
    java.lang.ThreadLocal xpath -> xpath
    void <init>() -> <init>
    void <init>(java.lang.ThreadLocal) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int) -> compareInternal
com.thoughtworks.xstream.io.xml.xppdom.XppFactory -> com.thoughtworks.xstream.io.xml.xppdom.XppFactory:
    void <init>() -> <init>
    org.xmlpull.v1.XmlPullParser createDefaultParser() -> createDefaultParser
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.lang.String) -> buildDom
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.Reader) -> buildDom
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.InputStream,java.lang.String) -> buildDom
com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:
    java.util.Map aliasToName -> aliasToName
    java.util.Map nameToAlias -> nameToAlias
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void addAliasFor(java.lang.String,java.lang.String) -> addAliasFor
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper -> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper:
    char dollarReplacementInClass -> dollarReplacementInClass
    java.lang.String dollarReplacementInField -> dollarReplacementInField
    java.lang.String underscoreReplacementInField -> underscoreReplacementInField
    java.lang.String noPackagePrefix -> noPackagePrefix
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String escapeClassName(java.lang.String) -> escapeClassName
    java.lang.String unescapeClassName(java.lang.String) -> unescapeClassName
    java.lang.String escapeFieldName(java.lang.String) -> escapeFieldName
    java.lang.String unescapeFieldName(java.lang.String) -> unescapeFieldName
    boolean stringFoundAt(java.lang.String,int,java.lang.String) -> stringFoundAt
com.thoughtworks.xstream.mapper.AnnotationConfiguration -> com.thoughtworks.xstream.mapper.AnnotationConfiguration:
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
com.thoughtworks.xstream.mapper.AnnotationMapper -> com.thoughtworks.xstream.mapper.AnnotationMapper:
    boolean locked -> locked
    java.lang.Object[] arguments -> arguments
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    java.util.Map converterCache -> converterCache
    java.util.Set annotatedTypes -> annotatedTypes
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.ClassLoader,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.JVM) -> <init>
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void processTypes(java.util.Set) -> processTypes
    void addParametrizedTypes(java.lang.reflect.Type,java.util.Set) -> addParametrizedTypes
    void processConverterAnnotations(java.lang.Class) -> processConverterAnnotations
    void processAliasAnnotation(java.lang.Class,java.util.Set) -> processAliasAnnotation
    void processAliasTypeAnnotation(java.lang.Class) -> processAliasTypeAnnotation
    void processImplicitCollectionAnnotation(java.lang.Class) -> processImplicitCollectionAnnotation
    void processFieldAliasAnnotation(java.lang.reflect.Field) -> processFieldAliasAnnotation
    void processAsAttributeAnnotation(java.lang.reflect.Field) -> processAsAttributeAnnotation
    void processImplicitAnnotation(java.lang.reflect.Field) -> processImplicitAnnotation
    void processOmitFieldAnnotation(java.lang.reflect.Field) -> processOmitFieldAnnotation
    void processLocalConverterAnnotation(java.lang.reflect.Field) -> processLocalConverterAnnotation
    com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class) -> cacheConverter
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
    void setupMappers() -> setupMappers
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set access$100(com.thoughtworks.xstream.mapper.AnnotationMapper) -> access$100
com.thoughtworks.xstream.mapper.AnnotationMapper$1 -> com.thoughtworks.xstream.mapper.AnnotationMapper$1:
    java.util.Set val$types -> val$types
    java.util.Set val$processedTypes -> val$processedTypes
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> this$0
    void <init>(com.thoughtworks.xstream.mapper.AnnotationMapper,java.util.Set,java.util.Set) -> <init>
    boolean add(java.lang.reflect.Type) -> add
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.mapper.AnnotationMapper$UnprocessedTypesSet -> com.thoughtworks.xstream.mapper.AnnotationMapper$UnprocessedTypesSet:
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> this$0
    void <init>(com.thoughtworks.xstream.mapper.AnnotationMapper) -> <init>
    boolean add(java.lang.Class) -> add
    boolean add(java.lang.Object) -> add
    void <init>(com.thoughtworks.xstream.mapper.AnnotationMapper,com.thoughtworks.xstream.mapper.AnnotationMapper$1) -> <init>
com.thoughtworks.xstream.mapper.ArrayMapper -> com.thoughtworks.xstream.mapper.ArrayMapper:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String arrayType(int,java.lang.Class) -> arrayType
    java.lang.String boxedTypeName(java.lang.Class) -> boxedTypeName
com.thoughtworks.xstream.mapper.AttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AttributeAliasingMapper:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
com.thoughtworks.xstream.mapper.AttributeMapper -> com.thoughtworks.xstream.mapper.AttributeMapper:
    java.util.Map fieldNameToTypeMap -> fieldNameToTypeMap
    java.util.Set typeSet -> typeSet
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    java.util.Set fieldToUseAsAttribute -> fieldToUseAsAttribute
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.reflection.ReflectionProvider) -> <init>
    void setConverterLookup(com.thoughtworks.xstream.converters.ConverterLookup) -> setConverterLookup
    void addAttributeFor(java.lang.String,java.lang.Class) -> addAttributeFor
    void addAttributeFor(java.lang.Class) -> addAttributeFor
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class) -> getLocalConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class) -> shouldLookForSingleValueConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    void addAttributeFor(java.lang.reflect.Field) -> addAttributeFor
    void addAttributeFor(java.lang.Class,java.lang.String) -> addAttributeFor
com.thoughtworks.xstream.mapper.CGLIBMapper -> com.thoughtworks.xstream.mapper.CGLIBMapper:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String alias -> alias
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String) -> <init>
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.mapper.CGLIBMapper$Marker -> com.thoughtworks.xstream.mapper.CGLIBMapper$Marker:
com.thoughtworks.xstream.mapper.CachingMapper -> com.thoughtworks.xstream.mapper.CachingMapper:
    java.util.Map realClassCache -> realClassCache
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.Class realClass(java.lang.String) -> realClass
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.CannotResolveClassException -> com.thoughtworks.xstream.mapper.CannotResolveClassException:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.thoughtworks.xstream.mapper.ClassAliasingMapper -> com.thoughtworks.xstream.mapper.ClassAliasingMapper:
    java.util.Map typeToName -> typeToName
    java.util.Map classToName -> classToName
    java.util.Map nameToType -> nameToType
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void addClassAlias(java.lang.String,java.lang.Class) -> addClassAlias
    void addClassAttributeAlias(java.lang.String,java.lang.Class) -> addClassAttributeAlias
    void addTypeAlias(java.lang.String,java.lang.Class) -> addTypeAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    boolean itemTypeAsAttribute(java.lang.Class) -> itemTypeAsAttribute
    boolean aliasIsAttribute(java.lang.String) -> aliasIsAttribute
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper -> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:
    java.util.Map typeToImpl -> typeToImpl
    java.util.Map implToType -> implToType
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void addDefaults() -> addDefaults
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.DefaultMapper -> com.thoughtworks.xstream.mapper.DefaultMapper:
    java.lang.String XSTREAM_PACKAGE_ROOT -> XSTREAM_PACKAGE_ROOT
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    void <init>(com.thoughtworks.xstream.core.ClassLoaderReference) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    java.lang.String lookupName(java.lang.Class) -> lookupName
    java.lang.Class lookupType(java.lang.String) -> lookupType
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.mapper.DynamicProxyMapper -> com.thoughtworks.xstream.mapper.DynamicProxyMapper:
    java.lang.String alias -> alias
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String) -> <init>
    java.lang.String getAlias() -> getAlias
    void setAlias(java.lang.String) -> setAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy -> com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy:
    void <init>() -> <init>
com.thoughtworks.xstream.mapper.EnumMapper -> com.thoughtworks.xstream.mapper.EnumMapper:
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    java.util.Map enumConverterMap -> enumConverterMap
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class) -> getLocalConverter
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.FieldAliasingMapper -> com.thoughtworks.xstream.mapper.FieldAliasingMapper:
    java.util.Map fieldToAliasMap -> fieldToAliasMap
    java.util.Map aliasToFieldMap -> aliasToFieldMap
    java.util.Set fieldsToOmit -> fieldsToOmit
    java.util.Set unknownFieldsToIgnore -> unknownFieldsToIgnore
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String) -> addFieldAlias
    void addFieldsToIgnore(java.util.regex.Pattern) -> addFieldsToIgnore
    java.lang.Object key(java.lang.Class,java.lang.String) -> key
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map) -> getMember
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    void omitField(java.lang.Class,java.lang.String) -> omitField
com.thoughtworks.xstream.mapper.ImmutableTypesMapper -> com.thoughtworks.xstream.mapper.ImmutableTypesMapper:
    java.util.Set immutableTypes -> immutableTypes
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void addImmutableType(java.lang.Class) -> addImmutableType
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:
    java.util.Map classNameToMapper -> classNameToMapper
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class) -> getMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class) -> getOrCreateMapper
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    void add(java.lang.Class,java.lang.String,java.lang.Class) -> add
    void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> add
    void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String) -> add
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass access$000(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper,java.lang.Class) -> access$000
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:
    java.lang.Class definedIn -> definedIn
    java.util.Map namedItemTypeToDef -> namedItemTypeToDef
    java.util.Map itemFieldNameToDef -> itemFieldNameToDef
    java.util.Map fieldNameToDef -> fieldNameToDef
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper this$0 -> this$0
    void <init>(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper,java.lang.Class) -> <init>
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String) -> getImplicitCollectionDefByItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String) -> getImplicitCollectionDefForFieldName
    void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl) -> add
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl:
    java.lang.String fieldName -> fieldName
    java.lang.String itemFieldName -> itemFieldName
    java.lang.Class itemType -> itemType
    java.lang.String keyFieldName -> keyFieldName
    void <init>(java.lang.String,java.lang.Class,java.lang.String,java.lang.String) -> <init>
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType createNamedItemType() -> createNamedItemType
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
    java.lang.String getKeyFieldName() -> getKeyFieldName
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:
    java.lang.Class itemType -> itemType
    java.lang.String itemFieldName -> itemFieldName
    void <init>(java.lang.Class,java.lang.String) -> <init>
    boolean equals(java.lang.Object) -> equals
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    int hashCode() -> hashCode
com.thoughtworks.xstream.mapper.LocalConversionMapper -> com.thoughtworks.xstream.mapper.LocalConversionMapper:
    java.util.Map localConverters -> localConverters
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class) -> getLocalSingleValueConverter
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.Mapper -> com.thoughtworks.xstream.mapper.Mapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping -> com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping:
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
    java.lang.String getKeyFieldName() -> getKeyFieldName
com.thoughtworks.xstream.mapper.Mapper$Null -> com.thoughtworks.xstream.mapper.Mapper$Null:
    void <init>() -> <init>
com.thoughtworks.xstream.mapper.MapperWrapper -> com.thoughtworks.xstream.mapper.MapperWrapper:
    com.thoughtworks.xstream.mapper.Mapper wrapped -> wrapped
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.OuterClassMapper -> com.thoughtworks.xstream.mapper.OuterClassMapper:
    java.lang.String alias -> alias
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String) -> <init>
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
com.thoughtworks.xstream.mapper.PackageAliasingMapper -> com.thoughtworks.xstream.mapper.PackageAliasingMapper:
    java.util.Comparator REVERSE -> REVERSE
    java.util.Map packageToName -> packageToName
    java.util.Map nameToPackage -> nameToPackage
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void addPackageAlias(java.lang.String,java.lang.String) -> addPackageAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.mapper.PackageAliasingMapper$1 -> com.thoughtworks.xstream.mapper.PackageAliasingMapper$1:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.mapper.SecurityMapper -> com.thoughtworks.xstream.mapper.SecurityMapper:
    java.util.List permissions -> permissions
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.security.TypePermission[]) -> <init>
    void addPermission(com.thoughtworks.xstream.security.TypePermission) -> addPermission
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.mapper.XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XmlFriendlyMapper:
    void <init>(com.thoughtworks.xstream.mapper.Mapper) -> <init>
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameToXML(java.lang.String) -> mapNameToXML
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:
    java.io.FilenameFilter filter -> filter
    java.io.File baseDirectory -> baseDirectory
    java.lang.String encoding -> encoding
    com.thoughtworks.xstream.XStream xstream -> xstream
    void <init>(java.io.File,com.thoughtworks.xstream.XStream,java.lang.String) -> <init>
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String getName(java.lang.Object) -> getName
    void writeFile(java.io.File,java.lang.Object) -> writeFile
    java.io.File getFile(java.lang.String) -> getFile
    java.lang.Object readFile(java.io.File) -> readFile
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.io.FilenameFilter access$000(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$000
    java.io.File access$100(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$100
    java.lang.Object access$500(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File) -> access$500
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter:
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    void <init>(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator:
    java.io.File[] files -> files
    int position -> position
    java.io.File current -> current
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    void <init>(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> <init>
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
    java.io.File access$202(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator,java.io.File) -> access$202
    java.io.File[] access$300(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$300
    int access$404(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$404
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1 -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:
    java.io.File file -> file
    java.lang.Object key -> key
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator this$1 -> this$1
    void <init>(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> <init>
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.persistence.FilePersistenceStrategy -> com.thoughtworks.xstream.persistence.FilePersistenceStrategy:
    java.lang.String illegalChars -> illegalChars
    void <init>(java.io.File) -> <init>
    void <init>(java.io.File,com.thoughtworks.xstream.XStream) -> <init>
    void <init>(java.io.File,com.thoughtworks.xstream.XStream,java.lang.String,java.lang.String) -> <init>
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.FileStreamStrategy -> com.thoughtworks.xstream.persistence.FileStreamStrategy:
    void <init>(java.io.File) -> <init>
    void <init>(java.io.File,com.thoughtworks.xstream.XStream) -> <init>
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.PersistenceStrategy -> com.thoughtworks.xstream.persistence.PersistenceStrategy:
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
com.thoughtworks.xstream.persistence.StreamStrategy -> com.thoughtworks.xstream.persistence.StreamStrategy:
com.thoughtworks.xstream.persistence.XmlArrayList -> com.thoughtworks.xstream.persistence.XmlArrayList:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    void <init>(com.thoughtworks.xstream.persistence.PersistenceStrategy) -> <init>
    int size() -> size
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    void rangeCheck(int) -> rangeCheck
    java.lang.Object get(int) -> get
    java.lang.Object remove(int) -> remove
com.thoughtworks.xstream.persistence.XmlMap -> com.thoughtworks.xstream.persistence.XmlMap:
    com.thoughtworks.xstream.persistence.PersistenceStrategy persistenceStrategy -> persistenceStrategy
    void <init>(com.thoughtworks.xstream.persistence.PersistenceStrategy) -> <init>
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set entrySet() -> entrySet
    com.thoughtworks.xstream.persistence.PersistenceStrategy access$000(com.thoughtworks.xstream.persistence.XmlMap) -> access$000
com.thoughtworks.xstream.persistence.XmlMap$XmlMapEntries -> com.thoughtworks.xstream.persistence.XmlMap$XmlMapEntries:
    com.thoughtworks.xstream.persistence.XmlMap this$0 -> this$0
    void <init>(com.thoughtworks.xstream.persistence.XmlMap) -> <init>
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.persistence.XmlSet -> com.thoughtworks.xstream.persistence.XmlSet:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    void <init>(com.thoughtworks.xstream.persistence.PersistenceStrategy) -> <init>
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean add(java.lang.Object) -> add
    java.lang.Long findEmptyKey() -> findEmptyKey
com.thoughtworks.xstream.security.AnyTypePermission -> com.thoughtworks.xstream.security.AnyTypePermission:
    com.thoughtworks.xstream.security.TypePermission ANY -> ANY
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.ArrayTypePermission -> com.thoughtworks.xstream.security.ArrayTypePermission:
    com.thoughtworks.xstream.security.TypePermission ARRAYS -> ARRAYS
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.CGLIBProxyTypePermission -> com.thoughtworks.xstream.security.CGLIBProxyTypePermission:
    com.thoughtworks.xstream.security.TypePermission PROXIES -> PROXIES
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.ExplicitTypePermission -> com.thoughtworks.xstream.security.ExplicitTypePermission:
    java.util.Set names -> names
    void <init>(java.lang.Class[]) -> <init>
    void <init>(java.lang.String[]) -> <init>
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.ExplicitTypePermission$1 -> com.thoughtworks.xstream.security.ExplicitTypePermission$1:
    java.lang.Class[] val$types -> val$types
    void <init>(java.lang.Class[]) -> <init>
    java.lang.String[] getNames() -> getNames
com.thoughtworks.xstream.security.ForbiddenClassException -> com.thoughtworks.xstream.security.ForbiddenClassException:
    void <init>(java.lang.Class) -> <init>
com.thoughtworks.xstream.security.InterfaceTypePermission -> com.thoughtworks.xstream.security.InterfaceTypePermission:
    com.thoughtworks.xstream.security.TypePermission INTERFACES -> INTERFACES
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.NoPermission -> com.thoughtworks.xstream.security.NoPermission:
    com.thoughtworks.xstream.security.TypePermission permission -> permission
    void <init>(com.thoughtworks.xstream.security.TypePermission) -> <init>
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.NoTypePermission -> com.thoughtworks.xstream.security.NoTypePermission:
    com.thoughtworks.xstream.security.TypePermission NONE -> NONE
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.NullPermission -> com.thoughtworks.xstream.security.NullPermission:
    com.thoughtworks.xstream.security.TypePermission NULL -> NULL
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.PrimitiveTypePermission -> com.thoughtworks.xstream.security.PrimitiveTypePermission:
    com.thoughtworks.xstream.security.TypePermission PRIMITIVES -> PRIMITIVES
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.ProxyTypePermission -> com.thoughtworks.xstream.security.ProxyTypePermission:
    com.thoughtworks.xstream.security.TypePermission PROXIES -> PROXIES
    void <init>() -> <init>
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.thoughtworks.xstream.security.RegExpTypePermission -> com.thoughtworks.xstream.security.RegExpTypePermission:
    java.util.regex.Pattern[] patterns -> patterns
    void <init>(java.lang.String[]) -> <init>
    void <init>(java.util.regex.Pattern[]) -> <init>
    boolean allows(java.lang.Class) -> allows
    java.util.regex.Pattern[] getPatterns(java.lang.String[]) -> getPatterns
com.thoughtworks.xstream.security.TypeHierarchyPermission -> com.thoughtworks.xstream.security.TypeHierarchyPermission:
    java.lang.Class type -> type
    void <init>(java.lang.Class) -> <init>
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.TypePermission -> com.thoughtworks.xstream.security.TypePermission:
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.WildcardTypePermission -> com.thoughtworks.xstream.security.WildcardTypePermission:
    void <init>(java.lang.String[]) -> <init>
    java.lang.String[] getRegExpPatterns(java.lang.String[]) -> getRegExpPatterns
